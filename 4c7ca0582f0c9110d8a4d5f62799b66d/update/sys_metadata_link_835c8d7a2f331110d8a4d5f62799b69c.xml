<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2b5493579f330200d3921a1cf67fcf21</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.IdentificationRuleValidator&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Validator to ensure validity of identifier rule entries&lt;/description&gt;
        &lt;name&gt;IdentificationRuleValidator&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var IdentificationRuleValidator = Class.create();
IdentificationRuleValidator.prototype = {
	initialize: function(ruleSysId) {
		this.ruleId = ruleSysId;

		this.InvalidField = 'InvalidField';
		this.InvalidTable = 'InvalidTable';
		this.problematicIdentifier = [];
		this.problematicRule = [];
		this.problematicDesc = [];
		this.showConsolidatedMsg = true;
		this._validate();
	},

	_validate: function () {
		this.problematicRule = j2js(SNC.CMDBUtil.getInvalidEntryIDs());
		this.problematicIdentifier = j2js(SNC.CMDBUtil.getInvalidEntryIdentifiers());
		this.problematicDesc = j2js(SNC.CMDBUtil.getInvalidEntryDescs());

		if (this.ruleId) { // dealing with single rule entry
			var rule = [];
			var identifier = [];
			var desc = [];
			for (var i=0; i&lt;this.problematicRule.length; i++) {
				if (this.problematicRule[i] == this.ruleId) {
					rule.push(this.problematicRule[i]);
					identifier.push(this.problematicIdentifier[i]);
					desc.push(this.problematicDesc[i]);
				}
			}
			this.problematicRule = rule;
			this.problematicIdentifier = identifier;
			this.problematicDesc = desc;
		}
	},

	valid: function () {
		if (this.problematicIdentifier.length!=0)
			return false;
		else
			return true;
	},

	validate: function (formGr) {
		if (this.problematicIdentifier.length!=0) {
			var identifier = formGr? formGr.applies_to : null;
			var usedMsgs = [];
			var au = new ArrayUtil();

			for (var i=0; i&lt;this.problematicIdentifier.length; i++) {
				// only show warning on Form view of vialating identifiers
				if (identifier &amp;&amp; this.problematicIdentifier[i] != identifier)
					continue;

				var entryDesc = gs.getMessage("Rule entry {0}", (this.showConsolidatedMsg ? '' : this.problematicRule[i]));
				var tableOrField = this.problematicDesc[i] === this.InvalidField ? 'field' : 'table';
				var msg = gs.getMessage("{0} under {1} identifier using non-existent {2} is ignored during identification!", [entryDesc, this.problematicIdentifier[i], tableOrField]);

				if (!au.contains(usedMsgs, msg) &amp;&amp; !gs.getErrorMessages().contains(msg)) {
					gs.addErrorMessage(msg);
					usedMsgs.push(msg);
				}
			}
			return usedMsgs;
		}
		return "";
	},

	type: 'IdentificationRuleValidator'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2015-11-23 21:21:48&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2b5493579f330200d3921a1cf67fcf21&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;11&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;IdentificationRuleValidator&lt;/sys_name&gt;
        &lt;sys_package display_value="Configuration Management (CMDB)" source="com.snc.cmdb"&gt;c60efc0f6d2220100acb70b3534330c0&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2b5493579f330200d3921a1cf67fcf21&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-11-18 22:36:15&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2210&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:26:35</sys_created_on>
        <sys_id>835c8d7a2f331110d8a4d5f62799b69c</sys_id>
        <sys_name>IdentificationRuleValidator</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_835c8d7a2f331110d8a4d5f62799b69c</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
