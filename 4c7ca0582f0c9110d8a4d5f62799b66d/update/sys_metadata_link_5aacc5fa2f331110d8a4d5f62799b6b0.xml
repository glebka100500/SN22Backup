<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>601cc3c353d2011008b1ddeeff7b127f</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.JobsExecutionTrackerAPI&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;API's to perform create, read and update operations on Jobs Execution Tracker table.&lt;/description&gt;
        &lt;name&gt;JobsExecutionTrackerAPI&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var JobsExecutionTrackerAPI = Class.create();
JobsExecutionTrackerAPI.prototype = {
    tableName: 'jobs_execution_tracker',

    jobExecutionStatesMapping: {
        'RUNNING': 1,
        'COMPLETED': 2,
        'ABORTED': 3
    },

    initialize: function(jobId) {
        this.jobId = jobId;
    },

    isJobRunning: function(timeout) {
        var jobRunning = false;
        if (!timeout) {
            timeout = parseInt(gs.getProperty('com.glide.scheduled_jobs_max_execution_time', 24));
        }
        var gr = new GlideRecord(this.tableName);
        gr.addQuery('job', this.jobId);
        gr.addQuery('state', this.jobExecutionStatesMapping.RUNNING);
        gr.query();
        while (gr.next()) {
            var durationInHours = GlideDateTime.subtract(new GlideDateTime(gr.getValue('start_time')), new GlideDateTime()).getNumericValue() / 1000 / 60 / 60;
            if (durationInHours &gt; timeout) {
                gr.setValue('state', this.jobExecutionStatesMapping.ABORTED);
                gr.setValue('end_time', new GlideDateTime());
                gr.update();
            } else {
                jobRunning = true;
            }
        }
        return jobRunning;
    },

    startJob: function() {
        var gr = new GlideRecord(this.tableName);
        gr.setValue('start_time', new GlideDateTime());
        gr.setValue('job', this.jobId);
        gr.setValue('state', this.jobExecutionStatesMapping.RUNNING);
        gr.insert();
        this.jobExecutionTrackerId = gr.getValue('sys_id');
    },

    endJob: function() {
        var gr = new GlideRecord(this.tableName);
        gr.get(this.jobExecutionTrackerId);
        gr.setValue('end_time', new GlideDateTime());
        gr.setValue('execution_time', GlideDateTime.subtract(new GlideDateTime(gr.getValue('start_time')), new GlideDateTime()));
        gr.setValue('state', this.jobExecutionStatesMapping.COMPLETED);
        gr.update();
    },

    isJobTracked: function() {
        var gr = new GlideRecord(this.tableName);
        gr.addQuery('job', this.jobId);
        gr.query();
        return gr.hasNext();
    },

    getLastCompletedJobTime: function() {
        var gr = new GlideRecord(this.tableName);
        gr.addQuery('job', this.jobId);
        gr.addQuery('state', this.jobExecutionStatesMapping.COMPLETED);
        gr.orderByDesc('start_time');
        gr.setLimit(1);
        gr.query();
        if (gr.next()) {
            return new GlideDateTime(gr.getValue('start_time'));
        }
    },

    type: 'JobsExecutionTrackerAPI'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-03-22 15:01:55&lt;/sys_created_on&gt;
        &lt;sys_id&gt;601cc3c353d2011008b1ddeeff7b127f&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;JobsExecutionTrackerAPI&lt;/sys_name&gt;
        &lt;sys_package display_value="Scheduled Jobs Tracker" source="com.glide.scheduled_jobs_tracker"&gt;10e3d5252f221110d8a4d5f62799b6f1&lt;/sys_package&gt;
        &lt;sys_policy&gt;protected&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_601cc3c353d2011008b1ddeeff7b127f&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-03-25 07:43:01&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2550&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:27:54</sys_created_on>
        <sys_id>5aacc5fa2f331110d8a4d5f62799b6b0</sys_id>
        <sys_name>JobsExecutionTrackerAPI</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_5aacc5fa2f331110d8a4d5f62799b6b0</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
