<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2f868005771010100afbf62ad9106101</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Remove pending user reference from sys_user_license_source table.&lt;/description&gt;
        &lt;name&gt;Remove pending user reference&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[removeLicenseSoureForPendingUser();

function removeLicenseSoureForPendingUser() {
    if (GlidePluginManager.isZboot())
        return;

    try {
		if(!GlideTableDescriptor.isValid('sys_user_license_source') || !GlideTableDescriptor.isValid('sys_user_pending_license'))
			return;

		var userSetSubSyncHelp = new UserSetSubscriptionSyncHelper();
		var usrLicGR = userSetSubSyncHelp._getAllUserBasedLicense();
		if (!usrLicGR.hasNext()) {
			gs.log('No user based subscription');
			return;
		}
		while(usrLicGR.next()) {
			gs.log('Removing pending user refrence for subscription: ' + usrLicGR.getValue('name'));
			removePendingRef(usrLicGR);
		}
    } catch (ex) {
         gs.print("Failed to remove license soure refrence for pending user: " + ex);
      }
}

function removePendingRef(licenseGR) {

	try{
		var licenseSysId = licenseGR.getValue('sys_id');
		var pendingUserIds = getPendingUsersForLicense(licenseSysId);
		if (pendingUserIds.length &gt; 0) {
			gs.log('Removing pending user reference from source for '+pendingUserIds.length+' users.');
			var licSrcGR = new GlideRecord('sys_user_license_source');
			licSrcGR.addQuery('license', licenseSysId);
			licSrcGR.addQuery('user', 'IN', pendingUserIds);
			licSrcGR.query();
			licSrcGR.deleteMultiple();
		}
	} catch (ex) {
         gs.print("Error processing for "+licenseGR.getValue('name')+" - "+ex);
    }
}

function getPendingUsersForLicense(licenseSysID) {
	var pendingUserSysIds = [];

	var userpendingGR = new GlideRecord('sys_user_pending_license');
	userpendingGR.addQuery('license', licenseSysID);
	userpendingGR.query();
	while (userpendingGR.next()) {
		pendingUserSysIds.push(userpendingGR.getValue('user'));
	}

	return pendingUserSysIds;
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-04-18 21:14:37&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2f868005771010100afbf62ad9106101&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Remove pending user reference&lt;/sys_name&gt;
        &lt;sys_package display_value="Subscription Administration Base" source="com.snc.usage_admin.base"&gt;e823c9cf6d6620100acb70b3534330ff&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_2f868005771010100afbf62ad9106101&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-04-18 22:25:22&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:54:51</sys_created_on>
        <sys_id>89d25d362f731110d8a4d5f62799b6ce</sys_id>
        <sys_name>Remove pending user reference</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_89d25d362f731110d8a4d5f62799b6ce</sys_update_name>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
