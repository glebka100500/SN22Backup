<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>676523f35b4810109dac15233381c70a</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ScrumStatesUtilAbstract&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;ScrumStatesUtilAbstract&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ScrumStatesUtilAbstract = Class.create();
ScrumStatesUtilAbstract.prototype = {
    initialize: function(sysClassName) {
        if (JSUtil.nil(sysClassName))
            return;

        var gr = new GlideRecord(sysClassName);
        gr.initialize();
        this.stateElement = gr.state;
    },

    getCompletedStates: function() {
        var completedAttribute = this.stateElement.getAttribute('completed_states');

        if (typeof completedAttribute === 'string')
            return completedAttribute.split(";");

        return null;
    },

    getCancelledStates: function() {
        var cancelAttribute = this.stateElement.getAttribute('cancelled_states');

        if (typeof cancelAttribute === 'string')
            return cancelAttribute.split(";");

        return null;
    },

    isCompletedState: function(stateVal) {
        var completedStates = this.getCompletedStates();

        if (JSUtil.notNil(completedStates))
            return completedStates.indexOf(stateVal) &gt; -1;

        return false;
    },

    isCancelledState: function(stateVal) {
        var cancelledStates = this.getCancelledStates();

        if (JSUtil.notNil(cancelledStates))
            return cancelledStates.indexOf(stateVal) &gt; -1;

        return false;
    },
	
	isCancelledOrCompletedState: function(stateVal) {
		return this.isCancelledState(stateVal) || this.isCompletedState(stateVal);
	},

    completeStateToggled: function(currentState, previousState) {
        return this.isCompletedState(currentState) !== this.isCompletedState(previousState);
    },

    cancelStateToggled: function(currentState, previousState) {
        return this.isCancelledState(currentState) !== this.isCancelledState(previousState);
    },

    cancelOrCompleteStateToggled: function(current, previous) {
        var currState = current.getValue('state');
        var prevState = previous.getValue('state');

        return this.cancelStateToggled(currState, prevState) || this.completeStateToggled(currState, prevState);
    },

    stateChangedFromComplete: function(previousState, currentState) {
        return !(this.isCompletedState(currentState)) &amp;&amp; this.isCompletedState(previousState);
    },

    stateChangedFromCancelled: function(previousState, currentState) {
        return !(this.isCancelledState(currentState)) &amp;&amp; this.isCancelledState(previousState);
    },
	
	stateChangedFromCancelledOrComplete: function(previousState, currentState) {
		return this.stateChangedFromComplete(previousState, currentState) || this.stateChangedFromCancelled(previousState, currentState);
	},
	
	stateChangedToCancelled: function(previousState, currentState) {
		return this.isCancelledState(currentState) &amp;&amp; !(this.isCancelledState(previousState));
	},

    type: 'ScrumStatesUtilAbstract'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-04-15 15:29:45&lt;/sys_created_on&gt;
        &lt;sys_id&gt;676523f35b4810109dac15233381c70a&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ScrumStatesUtilAbstract&lt;/sys_name&gt;
        &lt;sys_package display_value="Agile Development 2.0" source="com.snc.sdlc.agile.2.0"&gt;c2159f242fc10110d8a4d5f62799b627&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_676523f35b4810109dac15233381c70a&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-04-27 13:59:47&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2791&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:28:06</sys_created_on>
        <sys_id>5dbc0dfa2f331110d8a4d5f62799b6a0</sys_id>
        <sys_name>ScrumStatesUtilAbstract</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_5dbc0dfa2f331110d8a4d5f62799b6a0</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
