<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>4d6d74885372011026b0ddeeff7b124d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PwdDeviceHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;PwdDeviceHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PwdDeviceHelper = Class.create();
PwdDeviceHelper.prototype = {
    initialize: function() {},

    getDevicesOrEmailAddresses: function(userId, requestId, type) {
        var device;
        var trackingManager = new SNC.PwdTrackingManager();
        var isRequestInvalid = trackingManager.isRequestInvalid(requestId);
        var userName = trackingManager.getUserName(requestId);
        if (isRequestInvalid &amp;&amp; !gs.nil(userName)) {
            userId = userName;
        }
        if (type == 'SMS') {
            if (isRequestInvalid) {
                userId = JSON.stringify(userId);
                var num = 1;
                for (var i = 0; i &lt; userId.length; i++) {
                    num = num * userId.charCodeAt(i);
                }
                device = num.toString();
                while (device.length &lt; 10) {
                    device = device * device;
                }
                device = device.substring(0, 10);
            } else {
                device = new PwdNotificationHelper().getMobileFromProfile(userId);
            }
        } else if (type == 'Email') {
            if (isRequestInvalid) {
                device = userId + "@example.com";
            } else {
                device = new PwdNotificationHelper().getEmailFromProfile(userId);
            }
        }
		return device;
    },

    type: 'PwdDeviceHelper'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-04-06 17:10:11&lt;/sys_created_on&gt;
        &lt;sys_id&gt;4d6d74885372011026b0ddeeff7b124d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PwdDeviceHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Password Reset" source="com.glideapp.password_reset"&gt;a54385836da620100acb70b3534330a5&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_4d6d74885372011026b0ddeeff7b124d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-04-18 15:05:10&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;1378&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:27:22</sys_created_on>
        <sys_id>ea8c4dba2f331110d8a4d5f62799b6b7</sys_id>
        <sys_name>PwdDeviceHelper</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_ea8c4dba2f331110d8a4d5f62799b6b7</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
