<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>7210bc05773210102f5a3882a91061aa</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.NLUModelCategoryUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;NLUModelCategoryUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var NLUModelCategoryUtil = Class.create();


(function() {

    var constants = NLUConstants.constants;

    NLUModelCategoryUtil.prototype = {
        initialize: function() {},

        type: 'NLUModelCategoryUtil'
    };

    NLUModelCategoryUtil.isVAEnabled = function() {
        if (GlidePluginManager.isActive('com.glide.cs.chatbot')) {
            return true;
        }
        return false;
    };

    NLUModelCategoryUtil.getValidCategories = function() {
        var categories = [{
            label: gs.getMessage("Search"),
            value: constants.MODEL_CAT_SEARCH
        }];
        if (NLUModelCategoryUtil.isVAEnabled()) {
            categories.push({
                label: gs.getMessage("Virtual Agent"),
                value: constants.MODEL_CAT_VA
            });
        }
        return categories;
    };

    NLUModelCategoryUtil.getDefaultModelCategory = function() {
        var category = constants.MODEL_CAT_SEARCH;
        if (NLUModelCategoryUtil.isVAEnabled()) {
            category = constants.MODEL_CAT_VA;
        }
        return category;
    };

    NLUModelCategoryUtil.isValidCategory = function(category) {
        var categories = NLUModelCategoryUtil.getValidCategories();
        for (var i = 0, j = categories.length; i &lt; j; i++) {
            if (categories[i].value == category) {
                return true;
            }
        }
        return false;
    };

})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-08-21 06:09:37&lt;/sys_created_on&gt;
        &lt;sys_id&gt;7210bc05773210102f5a3882a91061aa&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;NLUModelCategoryUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="NLU Workbench - Core" source="com.glide.nlu"&gt;04dd388b6d2220100acb70b35343302f&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_7210bc05773210102f5a3882a91061aa&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-08-21 06:40:39&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;1427&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:28:27</sys_created_on>
        <sys_id>56ccc13e2f331110d8a4d5f62799b6f9</sys_id>
        <sys_name>NLUModelCategoryUtil</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_56ccc13e2f331110d8a4d5f62799b6f9</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
