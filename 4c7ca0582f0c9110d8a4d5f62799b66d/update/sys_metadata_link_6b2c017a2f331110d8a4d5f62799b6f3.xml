<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0429f513eb2311001c13abf11206fe08</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.VTBBoardSecurity&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;VTBBoardSecurity&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[/**
 *  Used for VTB Board security where board members can perform actions on the board
 */
var VTBBoardSecurity = Class.create();
VTBBoardSecurity.prototype = {
	initialize: function() {},

	canAccess: function(boardRecord) {
		// if they are the owner of the board, they can access it
		if (boardRecord.owner == gs.getUserID())
			return true;

		return this.isBoardMemberOf(boardRecord.sys_id);
	},

	canUserAccess: function(boardRecord, userId) {
		// if they are the owner of the board, they can access it
		if (boardRecord.owner == userId)
			return true;

		return this.isUserBoardMemberOf(boardRecord.sys_id, userId);
	},

	isBoardMemberOf: function(boardId) {
		return this.isUserBoardMemberOf(boardId, gs.getUserID());
	},

	isUserBoardMemberOf: function(boardId, userId) {
		var gr = new GlideRecord('vtb_board_member');
		gr.addQuery('board', boardId);
		gr.addQuery('user', userId);
		gr.addQuery('assignee', false);
		gr.query();

		// User is a member of vtb_board_member table for given board
		if (gr.hasNext())
			return true;

		return false;
	},

	type: 'VTBBoardSecurity'
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2014-03-24 15:54:55&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0429f513eb2311001c13abf11206fe08&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;VTBBoardSecurity&lt;/sys_name&gt;
        &lt;sys_package display_value="Visual Task Boards" source="com.glide.ui.vtb"&gt;a16db0c76d2220100acb70b3534330b4&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0429f513eb2311001c13abf11206fe08&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2016-07-18 20:46:00&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;1095&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:25:48</sys_created_on>
        <sys_id>6b2c017a2f331110d8a4d5f62799b6f3</sys_id>
        <sys_name>VTBBoardSecurity</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_6b2c017a2f331110d8a4d5f62799b6f3</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
