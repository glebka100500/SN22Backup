<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>07cb2e9667f302006cc275f557415a63</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.DelegatedDevUserPermissions&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;DelegatedDevUserPermissions&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var DelegatedDevUserPermissions = (function() {
	
	return {
		userPermissionsInScope : function(scopeId) {
			var rolePermissions = getRolePermissionsInScope(scopeId);
			var userRoles = getUsersWithRoles(keys(rolePermissions));
			var userPermissions = getPermissionsByUser(rolePermissions, userRoles);
			gs.debug("Role perms: " + new global.JSON().encode(rolePermissions));
			gs.debug("User roles: " + new global.JSON().encode(userRoles));
			gs.debug("User perms: " + new global.JSON().encode(userPermissions));
			return userPermissions;
		}
		
	};
	
	function getRolePermissionsInScope(scopeId) {
		var grAssignments = new GlideRecord('sys_scope_permission_set_role_assignment');
		grAssignments.addQuery('scope', scopeId);
		grAssignments.query();
		var rolePermissions = {};
		while (grAssignments.next()) {
			var role = grAssignments.getValue('role');
			if (typeof rolePermissions[role] === 'undefined')
				rolePermissions[role] = [];

			rolePermissions[role].push(grAssignments.getValue('permission_set'));	
		}
		
		return rolePermissions;
	}
	
	function getUsersWithRoles(roleList) {
		var grUserHasRole = new GlideRecord('sys_user_has_role');
		grUserHasRole.addQuery('role', 'IN', roleList);
		grUserHasRole.query();
		var userRoles = {};
		while (grUserHasRole.next()) {
			var user = grUserHasRole.getValue('user');
			if (typeof userRoles[user] === 'undefined')
				userRoles[user] = [];
			gs.debug("Type of user is " + typeof user);
			gs.debug("Adding role " + grUserHasRole.role + " to user " + user);
			userRoles[user].push(grUserHasRole.getValue('role'));
		}
		return userRoles;
	}
	
	function getPermissionsByUser(rolePermissions, userRoles) {
		var user, role;
		var permsByUser = {};
		for (user in userRoles) {
			permsByUser[user] = [];
			for (var i = 0; i &lt; userRoles[user].length; i++) {
				role = userRoles[user][i];
				gs.debug("Adding permission " + rolePermissions[role] + " to " + user);
				permsByUser[user] = rolePermissions[role];
			}
		}
		return permsByUser;
	}
	
	function keys(obj) {
		var ownKeys = [];
		for (var k in obj)
			if (obj.hasOwnProperty(k))
				ownKeys.push(k);
		return ownKeys;
	}
	
})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2015-11-20 15:41:57&lt;/sys_created_on&gt;
        &lt;sys_id&gt;07cb2e9667f302006cc275f557415a63&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;6&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;DelegatedDevUserPermissions&lt;/sys_name&gt;
        &lt;sys_package display_value="Delegated Development" source="com.glide.delegated_development"&gt;f1bdf04b6d2220100acb70b3534330f6&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_07cb2e9667f302006cc275f557415a63&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2015-11-30 18:53:36&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2158&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:25:52</sys_created_on>
        <sys_id>ac3c417a2f331110d8a4d5f62799b690</sys_id>
        <sys_name>DelegatedDevUserPermissions</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_ac3c417a2f331110d8a4d5f62799b690</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
