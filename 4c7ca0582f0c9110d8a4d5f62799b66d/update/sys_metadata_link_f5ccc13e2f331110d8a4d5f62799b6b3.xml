<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>71024841c30311003d2ae219cdba8ff2</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.sc_ic_ReqItemTaskDefn&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Wrapper for Requested Item Approval Definitions&lt;/description&gt;
        &lt;name&gt;sc_ic_ReqItemTaskDefn&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var sc_ic_ReqItemTaskDefn = Class.create();
sc_ic_ReqItemTaskDefn.prototype = Object.extendsObject(sc_ic_Base,{
    initialize: function(_gr,_gs) {
        sc_ic_Base.prototype.initialize.call(this,_gr,_gs);
    },
	
	getAssignment: function() {
		var assignment = {"user": '', "group":''};
		// Assignment directly in the task definition.
		if (this._gr.assignment_type+"" == sc_ic.CUSTOM_ASSIGNMENT) {
			assignment.user = this._gr.assignment_user+"";
			assignment.group = this._gr.assignment_group+"";
			
			if (this._log.atLevel(GSLog.DEBUG))
				this._log.debug("[getAssignment] Custom assignment user: " + this._gr.assignment_user.getDisplayValue() +
								", group: " + this._gr.assignment_group.getDisplayValue());	
		}
		else
			assignment = sc_ic_Factory.wrap(this._gr[sc_ic.TASK_ASSIGN_DEFN].getRefRecord()).getAssignment();
		
		return assignment;
	},
	
	/**
	 * Returns a Javascript JSON compatible version of the wrapped GlideRecord.
	 * Populated the assignment fields on time of calling.
	 */
	getJSObj: function() {
		var taskDef = {};
		taskDef.short_description = this._gr.short_description + "";
		taskDef.description = this._gr.description + "";
		taskDef.assignment_details = this._gr.assignment_details + "";
		taskDef.order = (isNaN(parseInt(this._gr.order,10)) ? 0 : parseInt(this._gr.order,10));
		
		// Sort out the assignment when this is created.
		var assignment = this.getAssignment();
		taskDef.assignment_user = assignment.user;
		taskDef.assignment_group = assignment.group;
		
		taskDef.sc_req_item = this._gr.sc_req_item + "";
		taskDef.sc_request = this._gr.sc_req_item.request + "";
		// For when we start storing 'requested from catalog' information against the item.
		//taskDef.sc_Catalog = this._gr.
		
		return taskDef;
	},
	
	_copyFields: function(source) {
		this._gr.assignment_type = source.assignment_type;
		this._gr.short_description = source.short_description;
		this._gr.description = source.description;
		this._gr.assignment_details = source.assignment_details;
		this._gr.assignment_user = source.assignment_user;
		this._gr.assignment_group = source.assignment_group;
		//Use the assignment definition as published at the point in time this request was created.
		this._gr[sc_ic.TASK_ASSIGN_DEFN] = source[sc_ic.TASK_ASSIGN_DEFN_STAGING][sc_ic.TASK_ASSIGN_DEFN];
		this._gr.order = source.order;
		return this;
	},
	
	_copyReferences: function(source) {
		//No references to copy for this type of record.  Included so customers can overload in future.
		return this;
	},
	
    type: 'sc_ic_ReqItemTaskDefn'
});

/**
 * Creates a task definition for a requested item from a published task definition
 */
sc_ic_ReqItemTaskDefn.create = function(reqItem, source) {
	var ritd = new GlideRecord(sc_ic.REQ_ITEM_TASK_DEFN);
	ritd.sc_req_item = reqItem.getUniqueValue();
	
	var reqItmTaskDefn = sc_ic_Factory.wrap(ritd);
	reqItmTaskDefn._copyFields(source);
	ritd.insert();
	reqItmTaskDefn._copyReferences(source);
	
	return ritd;
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;chris.henson&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2014-02-20 10:46:54&lt;/sys_created_on&gt;
        &lt;sys_id&gt;71024841c30311003d2ae219cdba8ff2&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;18&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;sc_ic_ReqItemTaskDefn&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Catalog Platform" source="com.glideapp.servicecatalog.platform"&gt;6d218d0f6d2620100acb70b35343303c&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_71024841c30311003d2ae219cdba8ff2&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;chris.henson&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2014-02-24 16:23:47&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2985&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:28:25</sys_created_on>
        <sys_id>f5ccc13e2f331110d8a4d5f62799b6b3</sys_id>
        <sys_name>sc_ic_ReqItemTaskDefn</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_f5ccc13e2f331110d8a4d5f62799b6b3</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
