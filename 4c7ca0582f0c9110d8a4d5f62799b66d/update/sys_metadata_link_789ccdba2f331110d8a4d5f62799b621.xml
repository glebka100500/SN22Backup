<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>53671d8ec31211003d2ae219cdba8f95</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.sc_ic_QuestionChoice&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Wrapper class for question choices (sc_ic_question_choice)&lt;/description&gt;
        &lt;name&gt;sc_ic_QuestionChoice&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var sc_ic_QuestionChoice = Class.create();
sc_ic_QuestionChoice.prototype = Object.extendsObject(sc_ic_Base, {
    initialize: function(_gr,_gs) {
		sc_ic_Base.prototype.initialize.call(this,_gr,_gs);
    },

	itemQuestionChanged: function() {
		if (JSUTIL.nil(this._gr[sc_ic.QUESTION]) || JSUtil.nil(this._gr[sc_ic.QUESTION][sc_ic.ITEM_STAGING]))
			return;
		
		var item = new GlideRecord(sc_ic.ITEM_STAGING);
		if (item.get(this._gr[sc_ic.QUESTION][sc_ic.ITEM_STAGING]))
			sc_ic_Factory.wrap(item).questionChanged();
	},
	
	getNextOrderNumber: function() {
		var questionChoiceGr = new GlideAggregate(sc_ic.QUESTION_CHOICE);
		questionChoiceGr.addAggregate("MAX", "order");
		questionChoiceGr.addNotNullQuery("order");
		questionChoiceGr.addQuery(sc_ic.QUESTION, this._gr[sc_ic.QUESTION]);
		questionChoiceGr.groupBy(sc_ic.QUESTION);
		questionChoiceGr.query();
	
		if (questionChoiceGr.next()) {
			return "" + (100 + parseInt(questionChoiceGr.getAggregate("MAX", "order"), 10));
		}
	
		return 100;
	},

	setQuestionChoiceChangedOnItem: function() {
		var itemStagingGr = new GlideRecord(sc_ic.ITEM_STAGING);
		if (itemStagingGr.get(this._gr[sc_ic.QUESTION][sc_ic.ITEM_STAGING])) {
			this._log.debug("[setQuestionChoiceChangedOnItem] Changed Item " + this._gr[sc_ic.ITEM_STAGING]);
			sc_ic_Factory.wrap(itemStagingGr).questionDefinitionChanged();
		}
	},
	
    type: 'sc_ic_QuestionChoice'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;chris.henson&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2014-01-17 12:56:31&lt;/sys_created_on&gt;
        &lt;sys_id&gt;53671d8ec31211003d2ae219cdba8f95&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;15&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;sc_ic_QuestionChoice&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Catalog Platform" source="com.glideapp.servicecatalog.platform"&gt;6d218d0f6d2620100acb70b35343303c&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_53671d8ec31211003d2ae219cdba8f95&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2014-03-14 16:33:49&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;1401&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:27:32</sys_created_on>
        <sys_id>789ccdba2f331110d8a4d5f62799b621</sys_id>
        <sys_name>sc_ic_QuestionChoice</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_789ccdba2f331110d8a4d5f62799b621</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
