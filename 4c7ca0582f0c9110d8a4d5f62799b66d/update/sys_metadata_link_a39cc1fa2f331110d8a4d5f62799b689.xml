<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>5a5358eb537d1010a887ddeeff7b12d2</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PlannedTaskStatus&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;This script include can be used to determine what should be status of planned_task as per Servicenow status policy &amp;#13;
&amp;#13;
Red: if planned end date &amp;lt; current date&amp;#13;
Yellow: (planned end date +3 )&amp;lt; current date&amp;#13;
Green: anything else&lt;/description&gt;
        &lt;name&gt;PlannedTaskStatus&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PlannedTaskStatus = Class.create();
PlannedTaskStatus.prototype = {
    initialize: function(topTask, days) {
		var currentDate = new GlideDate();
		var currentDateTime = new GlideDateTime();
		currentDateTime.setDisplayValueInternal(currentDate.getDisplayValueInternal() + " " + "00:00:00");
		var api = new SNC.PlannedTaskAPI();
        var scheduledEndDate = api.calculateEndDate(currentDateTime, days + " 00:00:00", this.getSchedule(topTask));
		var scheduledEndDateObj = JSON.parse(scheduledEndDate);
        this.yellowStratagyDate = new GlideDateTime();
		this.yellowStratagyDate.setDisplayValue(scheduledEndDateObj.date);
		this.offScheduleYellowStratagyDate = new GlideDateTime();
		this.offScheduleYellowStratagyDate.addDays(days);
    },
	
    determineStatus: function(gr) {
        var endDate = new GlideDateTime(gr.getValue('end_date'));
		if(this.isOffSchedule(gr))
			return this._determineStatus(endDate, this.offScheduleYellowStratagyDate);
		else
			return this._determineStatus(endDate, this.yellowStratagyDate);
    },
	
	_determineStatus: function(endDate, yellowStratagyEndDate) {
		var currentDate = new GlideDate();
		if (endDate.getLocalDate().onOrBefore(currentDate.getLocalDate()))
            return 'red';
		else if(endDate.onOrBefore(yellowStratagyEndDate))
			return 'yellow';
		else 
			return 'green';
	},

    getSchedule: function(top_task) {
		return new PTGlobalAPI().getScheduleId(top_task);
    },

	isOffSchedule: function(gr) {
		var allowOutSideSchedule = gr.getValue('allow_dates_outside_schedule');
		return (allowOutSideSchedule == 1) || (allowOutSideSchedule == 'true');
	},
	
    type: 'PlannedTaskStatus'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-07-10 05:51:20&lt;/sys_created_on&gt;
        &lt;sys_id&gt;5a5358eb537d1010a887ddeeff7b12d2&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;64&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PlannedTaskStatus&lt;/sys_name&gt;
        &lt;sys_package display_value="Planned Task_v2" source="com.snc.planned_task_v2"&gt;e93557642fc10110d8a4d5f62799b623&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_5a5358eb537d1010a887ddeeff7b12d2&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-06-17 03:58:03&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;1661&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:27:43</sys_created_on>
        <sys_id>a39cc1fa2f331110d8a4d5f62799b689</sys_id>
        <sys_name>PlannedTaskStatus</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_a39cc1fa2f331110d8a4d5f62799b689</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
