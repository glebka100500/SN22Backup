<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>961724850a0a2c3512e2c9702b5a1e0f</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.DocumentApproverHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;This class contains logics around the document approver. All the methods will apply to the document that is passed to the constructor.&lt;/description&gt;
        &lt;name&gt;DocumentApproverHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var DocumentApproverHelper = Class.create();

DocumentApproverHelper.prototype = {

    initialize: function(documentId) {
        this.documentId = documentId;
        this.approvalMatcher = new DocumentManagementApprovalMatcher(this.documentId);
        this.db = new DocumentManagementDB();
    },

    refreshApproverList: function() {

        this._deleteApproverGeneratedBySystem();

        var userApprovers = this.approvalMatcher.getUserApprovers();

        var groupApprovers = this.approvalMatcher.getGroupApprovers();

        for (var i = 0; i &lt; userApprovers.length; i++) {
            var userApprover = this.convertRuleApproverToDocumentApprover(userApprovers[i]);
            this.db.insert(userApprover, this.db.approval_sequence_table);
        }

        for (var i = 0; i &lt; groupApprovers.length; i++) {
            // var groupApprover = this.convertRuleGroupApproverToDocumentGroupApprover(groupApprovers[i]);
            // db.insert(groupApprover, this.db.approval_sequence_table);
            this.refreshDocumentGroupApproverMembers(groupApprovers[i]);
        }
    },

    /**
     * Add every group member to the approver list .
     */
    refreshDocumentGroupApproverMembers: function(ruleGroupApprover) {
        var groupmemember = new GlideRecord('sys_user_grmember');
        groupmemember.addQuery('group', ruleGroupApprover.group);
        groupmemember.query();
        while (groupmemember.next()) {
            var groupApprover = new Object();
            groupApprover.table_name = this.db.document_table;
            groupApprover.document_id = this.documentId;
            groupApprover.group = ruleGroupApprover.group;
            groupApprover.user = groupmemember.user;
            groupApprover.generated_by = "system";
            groupApprover.sequence = ruleGroupApprover.sequence;
            this.db.insert(groupApprover, this.db.approval_sequence_table);
        }
    },

    _deleteApproverGeneratedBySystem: function() {
        var approvers = this.db.getApprovers(this.documentId, "system");
        var approverIds = new Array();

        for (var i = 0; i &lt; approvers.length; i++) {
            approverIds.push(approvers[i].sys_id);
        }

        this.db.deleteRecord(this.db.approval_sequence_table, "sys_id", approverIds);
    },

    /**
     * Convert a rule approver object retrieved from the m2m_approval_rule_user to a document approver.
     * 
     * @param Object ruleApprover
     * @returns Object userApprover
     */
    convertRuleApproverToDocumentApprover: function(ruleApprover) {
        var userApprover = new Object();
        userApprover.table_name = this.db.document_table;
        userApprover.document_id = this.documentId;
        userApprover.user = ruleApprover.user;
        userApprover.sequence = ruleApprover.sequence;
        userApprover.generated_by = "system";
        return userApprover;
    },

    /**
     * Convert a rule group approver object retrieved from the m2m_approval_rule_user to a document group approver.
     * 
     * @param Object ruleGroupApprover
     * @returns Object groupApprover
     */
    convertRuleGroupApproverToDocumentGroupApprover: function(ruleGroupApprover) {
        var groupApprover = new Object();
        groupApprover.table_name = this.db.document_table;
        groupApprover.document_id = this.document_id;
        groupApprover.group = ruleGroupApprover.group;
        groupApprover.generated_by = "system";
        groupApprover.sequence = ruleGroupApprover.sequence;
        return groupApprover;
    }

};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;felix.bait&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2011-04-27 09:11:51&lt;/sys_created_on&gt;
        &lt;sys_id&gt;961724850a0a2c3512e2c9702b5a1e0f&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;15&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;DocumentApproverHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Managed documents" source="com.snc.document_management"&gt;85c6b5412f140110d8a4d5f62799b64b&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_961724850a0a2c3512e2c9702b5a1e0f&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-05-06 06:17:08&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;3561&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:29:49</sys_created_on>
        <sys_id>521d8d7e2f331110d8a4d5f62799b66c</sys_id>
        <sys_name>DocumentApproverHelper</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_521d8d7e2f331110d8a4d5f62799b66c</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
