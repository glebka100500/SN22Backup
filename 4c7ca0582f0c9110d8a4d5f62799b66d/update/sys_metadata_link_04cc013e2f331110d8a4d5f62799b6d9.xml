<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>6c1b528f5352011026b0ddeeff7b1280</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PwdQuestionAnswerHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;PwdQuestionAnswerHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PwdQuestionAnswerHelper = Class.create();
PwdQuestionAnswerHelper.prototype = {
    initialize: function() {},

    getQuestionsList: function(requestId, userId, verificationId, num_reset, num_enroll) {
        var lengthOfSHA_256 = 76;
        var isRequestInvalid = new SNC.PwdTrackingManager().isRequestInvalid(requestId);
        var enrolledQuestions = {
            "q_id": [],
            "q": [],
            "answerId": [],
            "answerHashType": []
        };
        if (isRequestInvalid) {
            var gr = new GlideAggregate('pwd_question');
            gr.addAggregate('COUNT');
            gr.query();
            if (gr.next()) {
                var questionsCount = gr.getAggregate('COUNT');
            }
            num_enroll = num_enroll &gt; questionsCount ? questionsCount : num_enroll;
            var questions = [];
            var hash = 1;
            var j = 0;
            for (var i = 0; i &lt; userId.length; i++)
                hash = hash + userId.charCodeAt(i);
            while (hash.toString().length &lt; num_enroll) {
                hash = hash * hash;
            }
            var count = Math.pow(10, questionsCount.toString().length);
            while (j &lt; num_enroll) {
                var num = (hash % count) % questionsCount;
                if (questions.indexOf(num) == -1 &amp;&amp; num &gt; 0) {
                    questions.push(num);
                    j++;
                }
                count = count + 1;
            }
            var gr_questions = new GlideRecord("pwd_question");
			gr_questions.orderByDesc('sys_name');
            gr_questions.query();
            count = 1;
            while (gr_questions.next()) {
                if (questions.indexOf(count) != -1) {
                    enrolledQuestions.q_id.push(gr_questions.getValue("sys_id"));
                    enrolledQuestions.q.push(gr_questions.getValue("question_translated"));
                    enrolledQuestions.answerHashType.push("SHA-256");
                }
                count++;
            }
        } else {
            var gr_answers = new GlideRecord('pwd_active_answer');
            gr_answers.addJoinQuery('pwd_enrollment', 'enrollment', 'sys_id');
            gr_answers.addQuery('enrollment.verification', verificationId);
            gr_answers.addQuery('enrollment.user', userId);
            gr_answers.query();
            while (gr_answers.next()) {
                enrolledQuestions.q_id.push(gr_answers.active_question.sys_id.toString());
                enrolledQuestions.q.push(gr_answers.active_question.question.toString());
                enrolledQuestions.answerId.push(gr_answers.sys_id.toString());
                enrolledQuestions.answerHashType.push(gr_answers.normalized_answer.toString().length &lt; lengthOfSHA_256 ? "SHA-1" : "SHA-256");
            }
        }
        return enrolledQuestions;
    },

    type: 'PwdQuestionAnswerHelper'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-03-22 11:10:34&lt;/sys_created_on&gt;
        &lt;sys_id&gt;6c1b528f5352011026b0ddeeff7b1280&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;8&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PwdQuestionAnswerHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Password Reset" source="com.glideapp.password_reset"&gt;a54385836da620100acb70b3534330a5&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_6c1b528f5352011026b0ddeeff7b1280&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-05-06 05:54:27&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2916&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:28:18</sys_created_on>
        <sys_id>04cc013e2f331110d8a4d5f62799b6d9</sys_id>
        <sys_name>PwdQuestionAnswerHelper</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_04cc013e2f331110d8a4d5f62799b6d9</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
