<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>351f44d0eb503100e05ae4e05206fe9f</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.LabelIndexing&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Logic that handles the text indexing of labels as part of the data of a record&lt;/description&gt;
        &lt;name&gt;LabelIndexing&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var LabelIndexing = Class.create();
LabelIndexing.prototype = {
    initialize: function() {
    },

	onAssociationChange: function(association) {
		// we index only shared tags, and only based on the table indexing parameters
		var tsUtil = new GlideTSUtil();
		if (tsUtil.hasTextIndex(association.table)) {
			var tagIndexLevel = tsUtil.getTableLevelConfiguration(association.table, 'text_index_tags');
			var triggerIndex = false;
	
			if (tagIndexLevel == 'all_shared' || tagIndexLevel == 'everyone_only') {
				var label = new GlideRecord('label');
				if (label.get(association.label)) {
					if (tagIndexLevel == 'all_shared' &amp;&amp; label.viewable_by != 'me')
						triggerIndex = true;
					else if (tagIndexLevel == 'everyone_only' &amp;&amp; label.viewable_by == 'everyone')
						triggerIndex = true;
				}
			}
		
			if (triggerIndex)
				new GlideTextIndexEvent().update(association.table, association.table_key, 'tags');
		}
	},
	
	onLabelChange: function(newLabel, oldLabel) {
		if (newLabel.sys_id != oldLabel.sys_id)
			return;
		
		var newAudience = newLabel.viewable_by;
		var oldAudience = oldLabel.viewable_by;
		var audienceChanged = (newAudience != oldAudience);
		var nameChanged = (newLabel.name.tolowerCase() != oldLabel.name.toLowerCase());
		if (!audienceChanged &amp;&amp; !nameChanged)
			return;
	
		var gr = new GlideRecord('label_entry');
		gr.addQuery('label', newLabel.sys_id);
		gr.orderBy('table');
		gr.query();
	
		if (gr.getRowCount() &gt; 100) {
			// don't saturate the system with too many text index events
			gs.logWarning('Text indexes for label ' + newLabel.name + ' may be out of date');
			return;
		}		

		var table = '';
		var triggerIndex = false;
		var tagIndexLevel = '';
		var tsUtil = new GlideTSUtil();
		while (gr.next()) {
			if (gr.table != table) {
				// retrieve the indexing settings for the new group of records
				table = gr.table.toString();
				triggerIndex = false;
				if (tsUtil.hasTextIndex(table)) {
					tagIndexLevel = tsUtil.getTableLevelConfiguration(table, 'text_index_tags');
					if (tagIndexLevel == 'all_shared') {
						if (audienceChanged) {
							// only from private or to private require re-indexing
							if (newAudience == 'me' || oldAudience == 'me')
								triggerIndex = true;
						} else if (nameChanged) {
							// reindex all shared tags
							triggerIndex = (newAudience != 'me');
						}
					} else if (tagIndexLevel == 'everyone_only') {
						if (audienceChanged) {
							// only from or to everyone require re-indexing
							if (newAudience == 'everyone' || oldAudience == 'everyone')
								triggerIndex = true;
						} else if (nameChanged) {
							// only re-index tags viewable by everyone
							triggerIndex = (newAudience == 'everyone');
						}
					}
				}
			}

			// queue indexing event if required
			if (triggerIndex)
				new GlideTextIndexEvent().update(table, gr.table_key, 'tags');
		}
	},

    type: 'LabelIndexing'
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2014-11-06 03:18:11&lt;/sys_created_on&gt;
        &lt;sys_id&gt;351f44d0eb503100e05ae4e05206fe9f&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;22&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;LabelIndexing&lt;/sys_name&gt;
        &lt;sys_package display_value="Labels" source="com.glide.labels"&gt;323db0476d2220100acb70b3534330aa&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_351f44d0eb503100e05ae4e05206fe9f&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-03-12 06:49:38&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2924&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:26:49</sys_created_on>
        <sys_id>226cc1ba2f331110d8a4d5f62799b6e6</sys_id>
        <sys_name>LabelIndexing</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_226cc1ba2f331110d8a4d5f62799b6e6</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
