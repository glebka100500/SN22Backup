<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>38e3e297d7d22200977660affd610371</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Change credential tag field type from string to glide list. Migrate tag field in credential table to credential tag table, and update the tag field in credentials with credential tag reference.&amp;#13;
&lt;/description&gt;
        &lt;name&gt;Migrate credential tags&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[gs.log("Start to migrate credential tags in discover_credential table ...");
changeCredTagTypeToGlideList();
migrateCredTags();


function changeCredTagTypeToGlideList() {
	var gr = new GlideRecord("sys_dictionary");
	gr.addQuery("name", "discovery_credentials");
	gr.addQuery("element", "tag");
	gr.query();
	if (gr.next()) {
		gr.setValue("internal_type", "glide_list");
		gr.setValue("reference", "sys_alias");
		gr.update();
	}
}

function migrateCredTags() {
	var credGr = new GlideRecord("discovery_credentials");
	credGr.addNotNullQuery("tag");
	credGr.query();
	
	gs.log("Credential tag migration: Find " + credGr.getRowCount() + " credential records have tags");
	
	while(credGr.next()) {
		gs.log("Credential " + credGr.name + " has tag:  "  +  credGr.tag );
		
		var tagSysIds = "";
		var tags = credGr.tag.split(",");
		
		for (var i in tags) {
			var tag = tags[i].trim();
			var tagSysId = "";
			
			var credTagGr = new GlideRecord("sys_alias");
			credTagGr.addEncodedQuery("name="+tag+"^ORsys_id="+tag);
			credTagGr.query();
			
			if (credTagGr.next())
				tagSysId = credTagGr.getUniqueValue();
			else {
				var newTagGr = new GlideRecord("sys_alias");				
				newTagGr.initialize();
				newTagGr.setWorkflow(false);
				newTagGr.name = tag;
				newTagGr.type = 'credential';
				newTagGr.insert();
				
				tagSysId = newTagGr.getUniqueValue();
			}
			
			tagSysIds += (tagSysIds == "") ? tagSysId : "," + tagSysId;
		}
		
		credGr.tag =  tagSysIds;
		credGr.update();
	}
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;jun.zhou&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2016-10-11 20:29:31&lt;/sys_created_on&gt;
        &lt;sys_id&gt;38e3e297d7d22200977660affd610371&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;34&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Migrate credential tags&lt;/sys_name&gt;
        &lt;sys_package display_value="Centralized Connection and Credential" source="com.snc.core.automation.connection_credential"&gt;d322c9476d6620100acb70b353433071&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_38e3e297d7d22200977660affd610371&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2017-06-13 03:46:49&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:55:30</sys_created_on>
        <sys_id>aef211762f731110d8a4d5f62799b660</sys_id>
        <sys_name>Migrate credential tags</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_aef211762f731110d8a4d5f62799b660</sys_update_name>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
