<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>4173865a470221007f47563dbb9a7181</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.LiveFeedMembers&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Live Feed Member Service&lt;/description&gt;
        &lt;name&gt;LiveFeedMembers&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var LiveFeedMembers = Class.create();
LiveFeedMembers.prototype = {

	/* constants begin { */
	// role
	LIVE_FEED_ADMIN: "live_feed_admin",
	// tables
	LIVE_CONVERSATION: "live_group_profile",
	LIVE_CONVERSATION_MEMBER: "live_group_member",
	LIVE_PROFILE: "live_profile",
	LIVE_TEAM: "live_group_profile",
	LIVE_TEAM_MEMBER: "live_group_member",

	// fields
	CONVERSATION: "group",
	GROUP: "group",
	TEAM: "team",
	MEMBER: "member",
	MEMBER_TYPE: "member_type",
	NAME: "name",
	STATE: "state",
	TABLE: "table",
	TYPE: "type",
	DOCUMENT: "document",
	USER: "user",

	// state values
	ADMIN: "admin",
	ACTIVE: "active",
	INACTIVE: "inactive",
	INVITED: "invited",
	REQUEST: "request",

	/* constants end } */

    initialize: function() {
		this.util = new LiveFeedCommon();
    },

	getVisibleMembers: function(params) {
		if(!params)
			params = {};
		var json = [];
		var profile = new GlideRecord(this.LIVE_PROFILE);
		var qc = profile.addQuery(this.TYPE, this.USER);
		if(params[this.util.TEXTQUERY]) {
			this.util.addExpressionQuery(profile, this.NAME, params);
		}
		if(params[this.TEAM]) {
			var lfg = new LiveFeedTeam();
			var teams = lfg.getTeams(params);
			var teamIds = [];
			while(teams.next()) {
				teamIds.push(teams.getValue(this.util.SYS_ID));
			}

			if(teamIds.length &gt; 0) {
				qc.addOrCondition(this.DOCUMENT, teamIds);
			}
		}
		var orderBy = ["name"];
		this.util.setOrderBy(profile, params, orderBy);
		this.util.setLimit(profile, params);
		profile.query();
		return profile;
	},

	getMemberDetails: function(members) {
		var api = new SNC.LiveFeedApi();
		for(var i=0;i&lt;members.length;i++)
			members[i].member.initials = api.getInitials(members[i].member.name);
		var ids = [];
		for(var i=0;i&lt;members.length;i++)
			ids.push(members[i].member.id);
		var images = this.util.getImages(ids);
		for(var i=0;i&lt;ids.length;i++)
			members[i].member.image = images[ids[i]];
	},
	
	getMembersJSON: function(params) {
		if(!params)
			params = {};
		if(params.conversation) {
			var lfc = new LiveFeedFeed();
			var json = lfc.getAllMembersJSON(params);
			this.getMemberDetails(json.members);
			return json;
		}
		else {
			var profiles = this.getVisibleMembers(params);
			var that = this;
			var json = this.util.listJSON(profiles, function(member) { return that.memberJSON(member); }, params);
			this.getMemberDetails(json);
			json = { more: profiles.hasNext(), 'members': json };
			return json;
		}
	},

	memberJSON: function(member) {
		var json = {};
		json.member = {};
		json.member.id = member.getValue(this.util.SYS_ID);
		json.member.name = member.getDisplayValue(this.NAME);
		json.type = this.util.choicevalue(member, "type");
		return json;
	},

    type: 'LiveFeedMembers'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2014-07-23 20:33:54&lt;/sys_created_on&gt;
        &lt;sys_id&gt;4173865a470221007f47563dbb9a7181&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;43&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;LiveFeedMembers&lt;/sys_name&gt;
        &lt;sys_package display_value="Live Feed" source="com.glideapp.live_feed_v2"&gt;bc11410f6d2620100acb70b353433043&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_4173865a470221007f47563dbb9a7181&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2014-11-20 07:07:11&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2719&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:27:06</sys_created_on>
        <sys_id>627c49ba2f331110d8a4d5f62799b6ed</sys_id>
        <sys_name>LiveFeedMembers</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_627c49ba2f331110d8a4d5f62799b6ed</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
