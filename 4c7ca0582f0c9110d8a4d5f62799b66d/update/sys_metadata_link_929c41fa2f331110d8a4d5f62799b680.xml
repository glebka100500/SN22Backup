<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>56cfbfdc0a0a0b8500e951753fe7b8b4</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ManagementClient&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Remote Management Client&lt;/description&gt;
        &lt;name&gt;ManagementClient&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[gs.include("PrototypeServer");

var ManagementClient = Class.create();

ManagementClient.prototype = {
    initialize : function() {
        this.id = GlideClusterSynchronizer.getSystemID();
        this.url = gs.getProperty('glide.management.host');
    },

    execute : function() {
        var m = new GlideappECCInputMessage(new GlideRecordFactory(), 'SNC_instance', null);
        m.addQuery('topic', this.id);
        m.query();
        while (m.next()) {
            if ('response' == m.getName())
                continue;
            
            var answer = this._execute(m);
            var mw = new GlideMarkupWriter("answer");
            mw.write(answer);
            answer = GlideXMLUtil.toString(mw.getDocument());
            m.setProcessed(new GlideDateTime().toString());
            m.setState('processed');
            m.update();
            this._sendResponse(m, answer);
        }
    },

    _execute : function(message) {
        var xml  = message.getPayload();
        var d = GlideXMLUtil.parse(xml);
        var script = GlideXMLUtil.getText(d, 'script');
        return GlideRhinoHelper.evaluateAsString(script);
    },

    _sendResponse : function(message, answer) {
        var response = new GlideappECCResponseMessage(message, answer);
        response.insert();
    },
   
    type: "ManagementClient"
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;glide.maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2008-01-08 00:32:33&lt;/sys_created_on&gt;
        &lt;sys_id&gt;56cfbfdc0a0a0b8500e951753fe7b8b4&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;57&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ManagementClient&lt;/sys_name&gt;
        &lt;sys_package display_value="Instance Management Client" source="com.glide.management_client"&gt;aef001cb6d2620100acb70b3534330d0&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_56cfbfdc0a0a0b8500e951753fe7b8b4&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;glide.maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2008-12-16 20:54:13&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;1385&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:27:38</sys_created_on>
        <sys_id>929c41fa2f331110d8a4d5f62799b680</sys_id>
        <sys_name>ManagementClient</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_929c41fa2f331110d8a4d5f62799b680</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
