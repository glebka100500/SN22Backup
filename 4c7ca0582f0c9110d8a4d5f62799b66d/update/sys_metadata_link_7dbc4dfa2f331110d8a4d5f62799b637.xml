<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>68327a48c3413000c111113e5bba8f9c</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.CertTaskEscalationTimerPercentage&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Utility method for setting escalation timer durations&lt;/description&gt;
        &lt;name&gt;CertTaskEscalationTimerPercentage&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CertTaskEscalationTimerPercentage = Class.create();
CertTaskEscalationTimerPercentage.prototype = {
    initialize: function() {
    },
    
    /**
	 * Returns the number of seconds the workflow timer needs to wait for duration of
	 * cert task based on the percentage specified.
	 * @param certTaskRecord Certification task record
	 * @param percentage Percentage of duration of the task the timer needs to wait
	 */
    getTimerWaitDuration: function(certTaskRecord, percentage) {
        var rightNow = new GlideDateTime();
        var startDate = certTaskRecord.sys_created_on.getGlideObject();
        var endDate = certTaskRecord.complete_by.getGlideObject();
        var usedDuration = 0;
        var totalDuration = endDate.getNumericValue() - startDate.getNumericValue();
		var percentageDuration = 0;
		var modifiedDuration = 0;
		var waitTime = 0;
		
        usedDuration = rightNow.getNumericValue() - startDate.getNumericValue();
        percentageDuration = totalDuration * (percentage / 100);
			
		modifiedDuration = percentageDuration - usedDuration;
		
        // Set 'answer' to the number of seconds this timer should wait
        if(modifiedDuration &gt; 0)
            waitTime = modifiedDuration / 1000;
		
		return waitTime;
    },
     
    /** 
     * Updates the Aging level of all certification tasks. Called by a scheduled job.
     */
    updateAgingLevels: function() {
        var age30 = new GlideDateTime();
        age30.addDays(-30);
        var age60 = new GlideDateTime();
        age60.addDays(-60);
        var age90 = new GlideDateTime();
        age90.addDays(-90);
        var certTask = new GlideRecord('cert_follow_on_task');
        var startDate;
        certTask.addEncodedQuery('stateIN-5,1,2');
        certTask.query();
        while(certTask.next()) {
        
 	       startDate = certTask.sys_created_on.getGlideObject();
			if (startDate.getNumericValue() &gt; age30.getNumericValue()) {
	           	certTask.setValue('aging_level', gs.getMessage("30 days"));
			}
            else if (startDate.getNumericValue() &gt; age60.getNumericValue()) {
            	certTask.setValue('aging_level', gs.getMessage("60 days"));
			}
            else if (startDate.getNumericValue() &gt; age90.getNumericValue()) {
            	certTask.setValue('aging_level', gs.getMessage("90 days"));
			}
            else {
            	certTask.setValue('aging_level', gs.getMessage("Past 90 days"));
			}
            
            certTask.update();
        }
    },
	
    type: 'CertTaskEscalationTimerPercentage'
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2012-10-08 18:59:21&lt;/sys_created_on&gt;
        &lt;sys_id&gt;68327a48c3413000c111113e5bba8f9c&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;38&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CertTaskEscalationTimerPercentage&lt;/sys_name&gt;
        &lt;sys_package display_value="Certification Core" source="com.snc.certification_core"&gt;d29009876d2620100acb70b353433035&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_68327a48c3413000c111113e5bba8f9c&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2012-10-17 15:51:32&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2544&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:28:08</sys_created_on>
        <sys_id>7dbc4dfa2f331110d8a4d5f62799b637</sys_id>
        <sys_name>CertTaskEscalationTimerPercentage</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_7dbc4dfa2f331110d8a4d5f62799b637</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
