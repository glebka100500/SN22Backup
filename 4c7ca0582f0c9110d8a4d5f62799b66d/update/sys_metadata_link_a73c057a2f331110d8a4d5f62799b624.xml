<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>12542f0537311200455726877e41f1b4</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PlanningConsoleAssignedToUsers&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;PlanningConsoleAssignedToUsers&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PlanningConsoleAssignedToUsers = Class.create();
PlanningConsoleAssignedToUsers.prototype = {
    initialize: function(limit) {
		if ( JSUtil.nil(limit) )
			this.limit = 30;
		else
			this.limit = limit;
    },
	
	pageLimit: function() {
		return this.limit;
	},
	
	getUsers: function(table, taskId, searchString, page) {
		if ( JSUtil.nil(page) )
			page = 1;
		var task = new GlideRecord(table);
        task.get(taskId);
        var user;
        var users = [];
        
        var refQualifier;
		var projectTables = new TableUtils('pm_project');
		var projectTaskTables = new TableUtils('pm_project_task');
		if ( projectTables.getAllExtensions().contains(table) || projectTaskTables.getAllExtensions().contains(table) )
			refQualifier = (new ProjectManagementUtils()).assignedToRefQual(task, SNC.PPMConfig.getProjectRole('user',table),true);					
		else
			refQualifier = (new ProjectManagementUtils()).assignedToRefQual(task, 'itil');
        user = new GlideRecord('sys_user');
        user.addEncodedQuery(refQualifier);
		user.chooseWindow((page-1)*this.pageLimit(), page * this.pageLimit());
        if(searchString)
            user.addQuery('name', 'CONTAINS' , searchString);
        user.query();
        while (user.next() ) {
			users.push(this.getUserProfile(user));
		}
		var rowCount = user.getRowCount();
        return {data: users, total: rowCount};
    },
    
    getUserProfile: function(user) {
        var userId = user.getValue('sys_id');
		var profile = {};
		profile.id = user.getValue('sys_id');
		profile.text = user.getValue('name');
		return profile;
//        if ( gs.nil(userId) ) {
//            return { imgUrl: null, initials: null };
//        }
//        var profile = {};
//        var gr = new GlideRecord('sys_attachment');
//        gr.addQuery('table_sys_id', userId);
//        gr.addQuery('table_name', 'ZZ_YYsys_user');
//        gr.query();
//        if ( gr.next() )
//            profile.imgUrl = gr.sys_id + '.iix';
//        else
//            profile.imgUrl = '';
//        gr = new GlideRecord('sys_user');
//        gr.get(userId);
//        var name = gr.getValue('name');
//        profile.text = name;
//        name = name.replace(/[^\w\s\.]\w+[^\w\s\.]|[^\w\s\.]/, "");
//        name = name.replace(/\s+/, ' ');
//        var parts = name.split(' ');
//        profile.initials = (parts[0].substring(0, 1) + parts[1].substring(0,1)).toUpperCase();
//        profile.id = userId;
//        return profile;
    },

    type: 'PlanningConsoleAssignedToUsers'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2016-02-24 08:52:16&lt;/sys_created_on&gt;
        &lt;sys_id&gt;12542f0537311200455726877e41f1b4&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;23&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PlanningConsoleAssignedToUsers&lt;/sys_name&gt;
        &lt;sys_package display_value="Planned Task_v2" source="com.snc.planned_task_v2"&gt;e93557642fc10110d8a4d5f62799b623&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_12542f0537311200455726877e41f1b4&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2018-01-22 18:17:38&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2530&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:26:04</sys_created_on>
        <sys_id>a73c057a2f331110d8a4d5f62799b624</sys_id>
        <sys_name>PlanningConsoleAssignedToUsers</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_a73c057a2f331110d8a4d5f62799b624</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
