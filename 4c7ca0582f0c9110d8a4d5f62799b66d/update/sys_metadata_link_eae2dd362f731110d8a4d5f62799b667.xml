<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>33ecb9d0872332008b9b3a0548cb0b90</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;*Removes the ReleaseProduct.number as it has only public - read&amp;#13;
*Removes the ReleaseProject.number as it has only public - read&amp;#13;
*Removes the ReleaseProject.relase_history as it has only public - read&lt;/description&gt;
        &lt;name&gt;ReleaseProduct &amp;amp; ReleaseProject ACL Fix&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[(function() {
	
	var _isACLCustomized = function(aclRoleRecord) {
		
		var isAvailable;
		var fileId = aclRoleRecord.sys_security_acl.sys_id;
		var gr = new GlideRecord('sys_update_xml');
		gr.addQuery('name', 'sys_security_acl_'+fileId);
		gr.query();
		if(gr.getRowCount() &gt; 0)
			isAvailable = true;
		return isAvailable;
	};
	
	var _isACLRolesCustomized = function(aclRoleRecord) {
		
		var isAvailable;
		
		var gr = new GlideRecord('sys_update_xml');
		gr.addQuery('type', 'Access Roles');
		gr.addQuery('target_name', 'CONTAINS', aclRoleRecord.sys_security_acl.name);
		gr.query();
		if(gr.getRowCount() &gt; 0)
			isAvailable = true;
		
		return isAvailable;
	};
	
	var _deleteACL = function(aclRoleRecord) {
		
		if(_isACLCustomized(aclRoleRecord)) {
			return;
		} else {
			if(_isACLRolesCustomized(aclRoleRecord))
				aclRoleRecord.deleteRecord();
			else
				aclRoleRecord.sys_security_acl.getRefRecord().deleteRecord();
		}
	};
	
	
	var role = new GlideRecord('sys_security_acl_role');
	var roleCondition = role.addQuery('sys_security_acl.name', 'release_product.number');
	roleCondition.addOrCondition('sys_security_acl.name', 'release_project.number');
	roleCondition.addOrCondition('sys_security_acl.name', 'release_project.release_history');
	role.addQuery('sys_user_role.name', 'public');
	role.addQuery('sys_security_acl.operation.name', 'read');
	role.query();
	
	while(role.next()) {
		_deleteACL(role);
	}
})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-06-20 09:27:53&lt;/sys_created_on&gt;
        &lt;sys_id&gt;33ecb9d0872332008b9b3a0548cb0b90&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ReleaseProduct &amp;amp; ReleaseProject ACL Fix&lt;/sys_name&gt;
        &lt;sys_package display_value="Release Management" source="com.snc.release_management"&gt;dad0494b6d2620100acb70b3534330f4&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_33ecb9d0872332008b9b3a0548cb0b90&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2017-06-21 07:00:50&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:55:14</sys_created_on>
        <sys_id>eae2dd362f731110d8a4d5f62799b667</sys_id>
        <sys_name>ReleaseProduct &amp; ReleaseProject ACL Fix</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_eae2dd362f731110d8a4d5f62799b667</sys_update_name>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
