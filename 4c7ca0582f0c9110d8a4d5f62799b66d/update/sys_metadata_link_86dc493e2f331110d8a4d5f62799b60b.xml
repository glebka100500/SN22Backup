<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>78c27775c7e5201020dab6c427c26065</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.LFLUAUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Utility class to handle LUA for localization. Customers are not expected to override these core functions &lt;/description&gt;
        &lt;name&gt;LFLUAUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var LFLUAUtils = Class.create();
LFLUAUtils.prototype = {
    STREAM_ID: "sn_lf",

    initialize: function() {
        this.logger = new LFLogger("LFLUAUtils");
        this.lfConstants = new LFConstants();
    },

    sendTranslationEvent: function(mode, translationInfo, translationType, internalName, targetLanguage, sourceLanguage, isError, hasProject) {
        var GCFMap = new GCFSampleMap();
        GCFMap.put("mode", mode);
        GCFMap.put("translationInfo", translationInfo);
        GCFMap.put("type", translationType);
        GCFMap.put("typeOfArtifact", internalName);
        GCFMap.put("targetLanguage", targetLanguage);
        GCFMap.put("sourceLanguage", sourceLanguage);
        GCFMap.put("status", isError ? this.lfConstants.ERROR_LUA : this.lfConstants.SUCCESS_LUA);
        GCFMap.put("hasProject", hasProject ? hasProject : false);
        this.sendLUAEvent("sn_lf_translation_event", GCFMap);
    },

    sendLUAEvent: function(eventId, GCFMap) {
        try {
            GCFCollector.recordUsageEvent("custom_metric", this.STREAM_ID, eventId, GCFMap);
        } catch (ex) {
            this.logger.logWarning("Failed to send LocalizationFramework event");
        }
    },

    sendRequestTranslationEventForSuccess: function(lfTaskUtils, sourceOfRequest) {
        if (lfTaskUtils.hasValidRecord()) {
            var lfInsight = new LFGenerateLocalizationInsights();
            var translationStatusResponse = lfInsight.calculateStatusAndPercentage(lfTaskUtils.getDocumentContent());
            var translationStatus = parseInt(translationStatusResponse.percentage / 5);
            this._sendRequestTranslationEvent(lfTaskUtils.getArtifactInternalName(),
                lfTaskUtils.getTargetLanguageCode(),
                lfTaskUtils.getSourceLanguageCode(),
                translationStatus, this.lfConstants.SUCCESS_LUA, sourceOfRequest);
        }
    },

    sendRequestTranslationEventForError: function(internalName, targetLanguage, sourceLanguage, sourceOfRequest) {
        this._sendRequestTranslationEvent(internalName, targetLanguage, sourceLanguage, 0, this.lfConstants.ERROR_LUA, sourceOfRequest);
    },

    sendAccessComparisonUIEvent: function(internalName, targetLanguage, sourceLanguage, callerMode, hasProject, pageSize, taskSize) {
        var GCFMap = new GCFSampleMap();
        GCFMap.put("typeOfArtifact", internalName);
        GCFMap.put("targetLanguage", targetLanguage);
        GCFMap.put("sourceLanguage", sourceLanguage);
        GCFMap.put("sourceOfRequest", callerMode == this.lfConstants.ADHOC ? this.lfConstants.ADHOC : this.lfConstants.TASK);
        GCFMap.put("hasProject", hasProject ? hasProject : false);
        GCFMap.put("pageSize", pageSize ? pageSize.toString() : "0");
        GCFMap.put("taskSize", taskSize ? taskSize.toString() : "0");
        this.sendLUAEvent("sn_lf_comparison_ui_event", GCFMap);
    },

    sendPublishEvent: function(internalName, sourceOfRequest, hasProject) {
        var GCFMap = new GCFSampleMap();
        GCFMap.put("internalName", internalName);
        GCFMap.put("sourceOfRequest", sourceOfRequest);
        GCFMap.put("hasProject", hasProject ? hasProject : false);
        this.sendLUAEvent("sn_lf_publish_event", GCFMap);
    },
    
    sendConflictEvent: function(translationMode, sourceOfRequest) {
        var GCFMap = new GCFSampleMap();
        GCFMap.put("translationMode", translationMode);
        GCFMap.put("sourceOfRequest", sourceOfRequest);
        this.sendLUAEvent("sn_lf_conflict_event", GCFMap);
    },
    
    sendFilterEvent: function(actionPerformed) {
        var GCFMap = new GCFSampleMap();
        GCFMap.put("actionPerformed", actionPerformed);
        this.sendLUAEvent("sn_lf_filter_event", GCFMap);
    },

    _sendRequestTranslationEvent: function(internalName, targetLanguage, sourceLanguage, translationStatus, status, sourceOfRequest) {
        var GCFMap = new GCFSampleMap();
        GCFMap.put("typeOfArtifact", internalName);
        GCFMap.put("targetLanguage", targetLanguage);
        GCFMap.put("sourceLanguage", sourceLanguage);
        GCFMap.put("translationStatus", translationStatus);
        GCFMap.put("status", status);
        GCFMap.put("sourceOfRequest", sourceOfRequest);
        this.sendLUAEvent("sn_lf_requesttranslation_event", GCFMap);
    },

    type: "LFLUAUtils"
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-01-11 19:41:41&lt;/sys_created_on&gt;
        &lt;sys_id&gt;78c27775c7e5201020dab6c427c26065&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;LFLUAUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Localization Framework" source="com.glide.localization_framework"&gt;be2124c92f241110d8a4d5f62799b640&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_78c27775c7e5201020dab6c427c26065&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-10-08 13:33:27&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;4355&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:28:42</sys_created_on>
        <sys_id>86dc493e2f331110d8a4d5f62799b60b</sys_id>
        <sys_name>LFLUAUtils</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_86dc493e2f331110d8a4d5f62799b60b</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
