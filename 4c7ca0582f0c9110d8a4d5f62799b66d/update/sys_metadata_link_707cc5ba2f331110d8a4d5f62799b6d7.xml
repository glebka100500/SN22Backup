<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>3cb2d6b1d700120035ae23c7ce6103f9</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.OnCallRotationProcessor&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Helper functions to determine which on-call calendar to render&lt;/description&gt;
        &lt;name&gt;OnCallRotationProcessor&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var OnCallRotationProcessor = Class.create();
OnCallRotationProcessor.prototype = Object.extendsObject(AbstractScriptProcessor, {
	UI_APPS : {
		"ON_CALL" : "sn.on_call",
		"OCF": "sn.$ocf"
	},

	initialize: function() {
		this.log = new GSLog("com.snc.on_call_rotation.log.level", this.type);
	},

	redirectToCalendar: function() {
		var ocUrl = new OCUrl().setRosterScheduleParams();

		var redirect = g_request.getParameter("sysparm_redirect");
		if (redirect)
			ocUrl.setAttribute("sysparm_redirect", redirect);

		var groupId = g_request.getParameter("sysparm_group_id");
		if (groupId)
			ocUrl.setAttribute("sysparm_group_id", groupId);

		var url = ocUrl.getUrl();

		if (this.log.atLevel(GSLog.DEBUG))
			this.log.debug("[redirectToCalendar] url: " + url);

		g_response.sendRedirect(url);
	},

	getScheduleUrl: function(scheduleId) {
		var gr = new GlideRecord("cmn_rota");
		if (!gr.get("schedule", scheduleId)) {
			this.log.warn("[OnCallRotationProcessor] could not find schedule with sys_id: " + scheduleId);
			return "";
		}

		var groupId = gr.getValue("group");

		return new OCUrl().setRosterScheduleParams().setGroupId(groupId).setScheduleId(scheduleId);
	},

	isCalendarSupported: function () {
		var useDoctype = this._getBooleanProperty("glide.ui.doctype");
		var showLegacyCalendar = this._getBooleanProperty("com.snc.on_call_rotation.show_legacy_calendar");
		var isBrowserSupported = this._isBrowserSupported();

		this.log.debug("[OnCallRotationProcessor] showLegacyCalendar = " + showLegacyCalendar);

		if (!showLegacyCalendar &amp;&amp; useDoctype &amp;&amp; isBrowserSupported)
			return true;
		return false;
	},

	_isBrowserSupported: function () {
		var currentOnCallMacro = gs.getProperty("com.snc.on_call_rotation.calendar_macro");
		var scopeName = (currentOnCallMacro == "ocf_calendar.xml") ? this.UI_APPS.OCF : this.UI_APPS.ON_CALL;
		return new OnCallRotation().isBrowserSupported(scopeName);
	},

	_getBooleanProperty: function (propertyName) {
		this.log.debug("[_getBooleanProperty] propertyName = " + propertyName);
		return (gs.getProperty(propertyName, "true") + "" == "true");
	},

	type: "OnCallRotationProcessor"
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2015-12-01 10:50:58&lt;/sys_created_on&gt;
        &lt;sys_id&gt;3cb2d6b1d700120035ae23c7ce6103f9&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;OnCallRotationProcessor&lt;/sys_name&gt;
        &lt;sys_package display_value="On-Call Scheduling" source="com.snc.on_call_rotation"&gt;37d4c9836de620100acb70b3534330d3&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_3cb2d6b1d700120035ae23c7ce6103f9&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2017-10-31 14:37:44&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2150&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:26:58</sys_created_on>
        <sys_id>707cc5ba2f331110d8a4d5f62799b6d7</sys_id>
        <sys_name>OnCallRotationProcessor</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_707cc5ba2f331110d8a4d5f62799b6d7</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
