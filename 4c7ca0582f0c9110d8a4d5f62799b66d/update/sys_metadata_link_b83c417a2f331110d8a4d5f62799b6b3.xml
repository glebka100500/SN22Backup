<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>08d30ab19fb22200598a5bb0657fcf26</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ExternalDependencyChange&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;ExternalDependencyChange&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ExternalDependencyChange = Class.create();
ExternalDependencyChange.prototype = {
    initialize: function() {
    },
	
	 updateDependencyTypeInRelations: function (_current) {
		gs.info("Into ExternalDependencyChange.changeDependency -&gt; " + _current.getValue("sys_id"));
		var shadowTasksInProject = this.findShadowTasksInProject(_current.getValue('sys_id'));
		var shadowTasksInOtherProjects = this.findShadowTasksInOtherProjects(_current.getValue('sys_id'));
		 var relations;
		 
		if ( shadowTasksInProject.length &gt; 0 ) {
			relations = new GlideRecord('planned_task_rel_planned_task');
			relations.addQuery('parent', 'IN', shadowTasksInProject.join(','));
			relations.setValue('inter_task_dependency_type', _current.getValue('external_dependency'));
			relations.updateMultiple();
			
			relations = new GlideRecord('planned_task_rel_planned_task');
			relations.addQuery('parent', 'IN', shadowTasksInProject.join(','));
			relations.query();
			while ( relations.next() ) {
				var externalRelation = ShadowTaskQueryHelper.findExternalRelation(relations.getValue('sys_id'));
				externalRelation.setValue('inter_task_dependency_type', _current.getValue('external_dependency'));
				externalRelation.setWorkflow(false);
				externalRelation.update();
			}
		}
		 
		if ( shadowTasksInOtherProjects.length &gt; 0 ) {
			relations = new GlideRecord('planned_task_rel_planned_task');
			relations.addQuery('child', 'IN', shadowTasksInOtherProjects.join(','));
			relations.setValue('inter_task_dependency_type', _current.getValue('external_dependency'));
			relations.updateMultiple();
		}
	 },

    findShadowTasksInProject: function(projectSysId) {
        gs.info("Into ExternalDependencyChange.shadowTasks -&gt; " + projectSysId);
        var gr = new GlideRecord("planned_task");
        gr.addQuery("top_task", projectSysId);
        gr.addNotNullQuery("orig_sys_id").addOrCondition("shadow", "true");
        gr.query();
		var tasks = [];
		while ( gr.next() )
			tasks.push(gr.getValue('sys_id'));
        return tasks;
    },

	findShadowTasksInOtherProjects: function(projectSysId) {
        var tasks = [];
		var gr = new GlideRecord('planned_task');
		gr.addQuery('orig_sys_id.top_task', projectSysId);
		gr.query();
		while ( gr.next() ) {
			tasks.push(gr.getValue('sys_id'));
		}
		return tasks;
    },

    type: 'ExternalDependencyChange'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2016-10-31 22:49:37&lt;/sys_created_on&gt;
        &lt;sys_id&gt;08d30ab19fb22200598a5bb0657fcf26&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;12&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ExternalDependencyChange&lt;/sys_name&gt;
        &lt;sys_package display_value="Planned Task_v2" source="com.snc.planned_task_v2"&gt;e93557642fc10110d8a4d5f62799b623&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_08d30ab19fb22200598a5bb0657fcf26&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2016-11-25 10:17:11&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2361&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:25:53</sys_created_on>
        <sys_id>b83c417a2f331110d8a4d5f62799b6b3</sys_id>
        <sys_name>ExternalDependencyChange</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_b83c417a2f331110d8a4d5f62799b6b3</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
