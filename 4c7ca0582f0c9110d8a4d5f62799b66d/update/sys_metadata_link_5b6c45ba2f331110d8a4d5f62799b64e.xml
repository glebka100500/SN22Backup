<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>37d293fb53312010069addeeff7b12f8</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.CatalogContentProcessorSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;WARNING: Customers should NOT modify this script
Implements extension point global.TaxonomyContentProcessor
Extension point used to handle processing of taxonomy content&lt;/description&gt;
        &lt;name&gt;CatalogContentProcessorSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CatalogContentProcessorSNC = Class.create();
CatalogContentProcessorSNC.prototype = {
    /**
     * Returns the table name of content which is processed
     * @return String
     */
    getTableName: function() {
        return 'sc_cat_item';
    },

    /**
     * Returns true or false whether a user has access to view the content record
     * @param String - catalogItemId
     * @param String - userId
     * @param boolean - isMobile
     * @return Boolean
     */
    canView: function(catalogItemId, userId, isMobile) {
        if (catalogItemId == null)
            return false;
        var catalogItemJS = new sn_sc.CatItem(catalogItemId);
        if (catalogItemJS == null || !catalogItemJS.canView() || !catalogItemJS.isVisibleServicePortal())
            return false;
        var catItemDetails = catalogItemJS.getItemSummary(true, "basic");
        if (!this.isItemDiscoverable(catItemDetails))
            return false;
        return true;
    },

    /**
     * Checks if current catalog item is discoverable
     * @param Object - catItemDetails
     * @return Boolean
     */
    isItemDiscoverable: function(catItemDetails) {
        if (this.getItemAvailability().split(',').indexOf(catItemDetails.availability) == -1)
            return false;
        return true;
    },

    /**
     * Checks sys properties for unsupported discover and desktop and mobile only
     * @return String
     */
    getItemAvailability: function() {
        if (gs.getProperty('glide.sc.mobile.unsupported_discover', 'discover') == 'discover')
            return "on_desktop,on_mobile,on_both";
        if (gs.getProperty('glide.sc.mobile.include_desktop_only_items', 'true') == 'false')
            return "on_mobile,on_both";
        return "on_desktop,on_mobile,on_both";
    },

    /**
     * Returns popularity of content, which is used to order the content while displaying
     * @param String - comma separated content sys_id's
     * @return Object
     */
    getPopularity: function(catItemIds) {
        var catItems = catItemIds.split(',');
        var contentPopularityMap = {};

        var catItemPopularity = this._getPopularityForCatItems(catItems);
        var recordProducerPopularity = this._getPopularityForRecordProducers(catItems);

        catItems.forEach(function(item) {
            var popularity = 0;
            if (catItemPopularity.hasOwnProperty(item))
                popularity = catItemPopularity[item];
            else if (recordProducerPopularity.hasOwnProperty(item))
                popularity = recordProducerPopularity[item];
            contentPopularityMap[item] = popularity;
        });

        return contentPopularityMap;
    },

    _getPopularityForCatItems: function(catItems) {
        var popularityMap = {};
        var createdQuery = this._getCreatedQuery();
        var reqItemGr = new GlideAggregate('sc_req_item');
        reqItemGr.addAggregate('COUNT', 'cat_item');
        reqItemGr.groupBy('cat_item.sys_id');
        reqItemGr.addQuery('cat_item', 'IN', catItems);
        reqItemGr.addQuery('cat_item.sys_class_name', 'NOT IN', 'sc_cat_item_guide,sc_cat_item_wizard,sc_cat_item_content,sc_cat_item_producer');
        reqItemGr.addQuery('cat_item.visible_standalone', 'true');
        reqItemGr.addEncodedQuery(createdQuery + 'cat_item.hide_sp=false^ORcat_item.hide_spISEMPTY');
        reqItemGr.query();
        while (reqItemGr.next())
            popularityMap[reqItemGr.getValue('cat_item.sys_id')] = parseInt(reqItemGr.getAggregate('COUNT', 'cat_item'));
        return popularityMap;
    },

    _getPopularityForRecordProducers: function(recordProducers) {
        var popularityMap = {};
        var createdQuery = this._getCreatedQuery();
        var recProGr = new GlideAggregate('sc_item_produced_record');
        recProGr.addAggregate('COUNT', 'producer');
        recProGr.groupBy('producer.sys_id');
        recProGr.addQuery('producer', 'IN', recordProducers);
        recProGr.addEncodedQuery(createdQuery + 'producer.hide_sp=false^ORproducer.hide_spISEMPTY');
        recProGr.addQuery('producer.visible_standalone', 'true');
        recProGr.query();
        while (recProGr.next())
            popularityMap[recProGr.getValue('producer.sys_id')] = parseInt(recProGr.getAggregate('COUNT', 'producer'));
        return popularityMap;
    },

    _getCreatedQuery: function() {
        return 'sys_created_onONLast 6 months@javascript:gs.beginningOfLast6Months()@javascript:gs.endOfLast6Months()^';
    },

    /**
     * Returns if the the content passes the specified filter conditions for content authoring experience
     * @return Boolean
     */
	isContentAuthoringAllowed: function(record) {
		return record.isValidRecord() &amp;&amp; record.canWrite();
    },

    type: 'CatalogContentProcessorSNC'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-01-26 10:09:10&lt;/sys_created_on&gt;
        &lt;sys_id&gt;37d293fb53312010069addeeff7b12f8&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CatalogContentProcessorSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Catalog Platform" source="com.glideapp.servicecatalog.platform"&gt;6d218d0f6d2620100acb70b35343303c&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_37d293fb53312010069addeeff7b12f8&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-04-06 11:45:13&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;4800&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:26:53</sys_created_on>
        <sys_id>5b6c45ba2f331110d8a4d5f62799b64e</sys_id>
        <sys_name>CatalogContentProcessorSNC</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_5b6c45ba2f331110d8a4d5f62799b64e</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
