<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>419ffb25ebfa2010e0ef83c45e5228b9</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.SPFavoriteUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;SPFavoriteUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SPFavoriteUtil;
(function() { 
	var LIMIT = 50;

	SPFavoriteUtil = {
		canView: canView,
		toggleFavorite: toggleFavorite 
    };
	
	function toggleFavorite(tableName, recordID) {
		var gr = new GlideRecord('sp_favorite');
		gr.addQuery('reference_table', tableName);
		gr.addQuery('reference_document', recordID);
		gr.addQuery('user', gs.getUserID());
		gr.query();
		if (gr.next()) { //Favorite exists, unfavorite it
			return gr.deleteRecord();
		} else { // Favorite doesnot exist, add a new favorite
			gr = new GlideRecord('sp_favorite');
			gr.addQuery('user', gs.getUserID());
			gr.query();
			if (gr.getRowCount() &gt;= LIMIT) {
				gs.addErrorMessage(gs.getMessage('You have reached maximum number of favorites allowed'));
				return false;
			} else {
				gr.initialize();
				gr.reference_table = tableName;
				gr.reference_document = recordID;
				gr.insert();
				return true;
			}
		}
	}

	function canView(gr, portalID) {
		//First check extension point
		var extensionPoints = new GlideScriptedExtensionPoint().getExtensions('global.SPFavoriteSecurity');
		var extensionCanView = false;
		var validExtension = false;
		for (var i = 0; i &lt; extensionPoints.length; ++i) {
			var point = extensionPoints[i];
			if (point.applies(gr)) {
				validExtension = true;
				if (point.canView(gr, portalID)) {
					extensionCanView = true;
					break;
				}
			}
		}
		if (validExtension)
			return extensionCanView;

		return gr.canRead(); // If there is no extension point, check ACL
	}

})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-03-10 06:54:23&lt;/sys_created_on&gt;
        &lt;sys_id&gt;419ffb25ebfa2010e0ef83c45e5228b9&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;8&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SPFavoriteUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Portal Favorites" source="com.glide.service-portal.favorites"&gt;675d1ef02f000110d8a4d5f62799b6b2&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_419ffb25ebfa2010e0ef83c45e5228b9&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-10-29 12:49:44&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;1505&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:27:06</sys_created_on>
        <sys_id>667c49ba2f331110d8a4d5f62799b6ef</sys_id>
        <sys_name>SPFavoriteUtil</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_667c49ba2f331110d8a4d5f62799b6ef</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
