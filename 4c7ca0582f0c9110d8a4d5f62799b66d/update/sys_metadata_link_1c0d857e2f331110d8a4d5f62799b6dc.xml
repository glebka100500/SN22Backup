<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>8c55099b0f0323001b54fe39b4767e99</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.StringPolyfill&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Implementation of standard String method padStart (ECMAScript 8th edition)&lt;/description&gt;
        &lt;name&gt;StringPolyfill&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var StringPolyfill;

if (!String.prototype.padStart) {
	/**
	 * Pads the current string with another string (multiple times, if needed) until the resulting string reaches the given length. The padding is applied from the start (left) of the current string
	 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart
	 */
	String.prototype.padStart = function padStart(targetLength, padString) {
        targetLength = targetLength &gt;&gt; 0; //truncate if number, or convert non-number to 0;
        padString = String(typeof padString !== 'undefined' ? padString : ' ');
        if (this.length &gt;= targetLength) {
            return String(this);
        } else {
            targetLength = targetLength - this.length;
            if (targetLength &gt; padString.length) {
                padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed
            }
            return padString.slice(0, targetLength) + String(this);
        }
    };
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;oron.subayi&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-01-22 05:07:56&lt;/sys_created_on&gt;
        &lt;sys_id&gt;8c55099b0f0323001b54fe39b4767e99&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;StringPolyfill&lt;/sys_name&gt;
        &lt;sys_package display_value="Core Automation" source="com.snc.core.automation"&gt;ee2289476d6620100acb70b3534330ff&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_8c55099b0f0323001b54fe39b4767e99&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;oron.subayi&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-01-22 05:07:56&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;1049&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:29:24</sys_created_on>
        <sys_id>1c0d857e2f331110d8a4d5f62799b6dc</sys_id>
        <sys_name>StringPolyfill</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_1c0d857e2f331110d8a4d5f62799b6dc</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
