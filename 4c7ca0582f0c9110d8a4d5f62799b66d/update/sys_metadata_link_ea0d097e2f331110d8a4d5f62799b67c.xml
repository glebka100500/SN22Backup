<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>8fbf6296eb11010045e1a5115206fe0f</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PwdMockIsEnrolled&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Enrollment check extension that returns true if an active enrollment record exists&lt;/description&gt;
        &lt;name&gt;PwdMockIsEnrolled&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PwdMockIsEnrolled = Class.create();
PwdMockIsEnrolled.prototype = {
    initialize: function() {
    },

    category: 'password_reset.extension.enrollment_check',    // DO NOT REMOVE THIS LINE!

    /**********
    * Returns boolean telling whether the user is enrolled.
    * 
    * @param params.enrolledUserId The sys-id of the user being checked (table: sys_user)
    * @param params.verificationId The sys-id of the verification being checked (table: pwd_verification)
    * @return boolean telling whether the user is enrolled into the specified verification
    **********/
    process: function(params) {
        return this.isEnrolled(params.verificationId, params.enrolledUserId);
    },	
	
	isEnrolled: function(verificationId, userId) {
		var enrollmentGr = new GlideRecord('pwd_enrollment');
		enrollmentGr.addQuery('verification', verificationId);
		enrollmentGr.addQuery('user', userId);
		enrollmentGr.addQuery('status', 1 /* Active */);
		enrollmentGr.query();
		return enrollmentGr.next();
	},

    type: 'PwdMockIsEnrolled'
};
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2013-05-15 00:39:34&lt;/sys_created_on&gt;
        &lt;sys_id&gt;8fbf6296eb11010045e1a5115206fe0f&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PwdMockIsEnrolled&lt;/sys_name&gt;
        &lt;sys_package display_value="Password Reset" source="com.glideapp.password_reset"&gt;a54385836da620100acb70b3534330a5&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_8fbf6296eb11010045e1a5115206fe0f&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2015-12-03 19:17:53&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;1051&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:29:34</sys_created_on>
        <sys_id>ea0d097e2f331110d8a4d5f62799b67c</sys_id>
        <sys_name>PwdMockIsEnrolled</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_ea0d097e2f331110d8a4d5f62799b67c</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
