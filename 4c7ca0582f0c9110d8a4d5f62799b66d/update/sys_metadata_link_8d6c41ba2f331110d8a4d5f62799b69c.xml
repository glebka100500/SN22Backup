<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>30f9dedb870010105958bba826cb0b03</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PIWBPredictionProcessor_default&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Implements extension point global.PIWBPredictionProcessor&lt;/description&gt;
        &lt;name&gt;PIWBPredictionProcessor_default&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PIWBPredictionProcessor_default = Class.create();
PIWBPredictionProcessor_default.prototype = {
    tableName: '',

    initialize: function() {
    },

    getTableName: function() {
        return this.tableName;
    },

    process: function(recordGr) {
		// set table name for the following logic
		this.tableName = recordGr.getTableName();

		try {
			var info = '';
			var piwbUtil = new global.PIWBUtil();
			var usecases = piwbUtil.getCompleteUsecasesOnTable(this.getTableName());

			usecases.forEach(function(usecase) {
				var integratedModel = usecase.integrated_model;
				if (!integratedModel)
					return;

				try {
					var predictor = new MLPredictor();
					var solutionName = integratedModel.ml_model_solution_name;
					var solution = predictor.findActiveSolution(solutionName);
					if (!solution)
						return;
		
					/* The next line of code is doing the prediction and updating current record. */
					/* If no prediction is done, we don't build prediction info message. */
					if (!predictor.applyPredictionForSolution(recordGr, solution))
						return;
		
					/* Building prediction info message */
					var fieldName = solution.getPredictedField();
					var fieldLabel = recordGr.getElement(fieldName).getLabel();
					var predictedDisplayValue = recordGr.getDisplayValue(fieldName);
					var msg = gs.getMessage("Predicted {0} for {1}.", [predictedDisplayValue, fieldLabel]);
					if (info.length &gt; 0)
						info += " ";
					info += msg;
				} catch (e1) {
					gs.error('PIWBPredictionProcessor_incident.process: Error occurs in the prediction of model ' + integratedModel.sys_id + '. Error message: ' + e1.message);
					return;
				}
			});
			/* Print out prediction info message on screen. */
			if (info.length &gt; 0) {
				var recordUrl = "&lt;a href='"+recordGr.getLink()+"'&gt;"+recordGr.getDisplayValue()+":&lt;/a&gt;";
				gs.addInfoMessage(recordUrl + " " + info);
			}
		} catch(e2) {
			gs.error('PIWBPredictionProcessor_default.process: ' + e2.message);
			return true;
		}
		return true;
	},

    type: 'PIWBPredictionProcessor_default'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-04-13 20:42:28&lt;/sys_created_on&gt;
        &lt;sys_id&gt;30f9dedb870010105958bba826cb0b03&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PIWBPredictionProcessor_default&lt;/sys_name&gt;
        &lt;sys_package display_value="Predictive Intelligence Workbench" source="com.sn_piwb_ml"&gt;a557f1452f140110d8a4d5f62799b6b5&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_30f9dedb870010105958bba826cb0b03&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-05-20 00:13:08&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2078&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:26:43</sys_created_on>
        <sys_id>8d6c41ba2f331110d8a4d5f62799b69c</sys_id>
        <sys_name>PIWBPredictionProcessor_default</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_8d6c41ba2f331110d8a4d5f62799b69c</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
