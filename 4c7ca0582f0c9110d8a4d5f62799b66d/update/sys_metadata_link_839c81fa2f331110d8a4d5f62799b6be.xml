<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>59239b4377e1501084974f20681061a7</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ScanMuteRule&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;ScanMuteRule&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ScanMuteRule = Class.create();
ScanMuteRule.prototype = Object.extendsObject(AbstractAjaxProcessor, {
 
	muteFindings: function() { 
		var muteReasonSysId = this.getParameter('sysparm_mute_reason_sys_id');
		var findingsSysIds = this.getParameter('sysparm_findings_sys_id');
		var findingsList = findingsSysIds.split(',');
		for (element in findingsList ) {
			var findingSysId = findingsList[element];
			var findingGR = new GlideRecord('scan_finding');
			if (findingGR.get(findingSysId)) {
				findingGR.scan_mute_rule = this._mute(findingGR.check, muteReasonSysId, findingGR.source_table, findingGR.source);
				findingGR.update();
			} 
		}
		
		var result = this.newItem("result");
		result.setAttribute("message", gs.getMessage('You have muted the selected finding(s) for future scans.'));
		return result;
	},

	_mute: function(check, muteReason, sourceTable, source) {
		gr = new GlideRecordSecure('scan_mute_rule');
		gr.addQuery('check', check);
		gr.addQuery('source_table', sourceTable);
		gr.addQuery('source', source);
		gr.query();

		if (gr.next()) {
			gr.mute_reason = muteReason;
			return gr.update();
		} else {
			gr.initialize();
			gr.check = check;
			gr.mute_reason = muteReason;
			gr.source_table = sourceTable;
			gr.source = source;
			gr.active = true;
			return gr.insert();
		}
	},
	
	type:"ScanMuteRule"
 });]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-06-26 19:58:46&lt;/sys_created_on&gt;
        &lt;sys_id&gt;59239b4377e1501084974f20681061a7&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;18&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ScanMuteRule&lt;/sys_name&gt;
        &lt;sys_package display_value="Instance Scan" source="com.glide.instance_scan"&gt;4774c54f6da620100acb70b353433068&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_59239b4377e1501084974f20681061a7&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-06-28 20:47:09&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;1347&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:27:41</sys_created_on>
        <sys_id>839c81fa2f331110d8a4d5f62799b6be</sys_id>
        <sys_name>ScanMuteRule</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_839c81fa2f331110d8a4d5f62799b6be</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
