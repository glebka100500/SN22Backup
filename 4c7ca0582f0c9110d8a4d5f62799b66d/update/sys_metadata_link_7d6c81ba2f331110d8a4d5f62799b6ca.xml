<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>32df41fceb1311003623666cd206feba</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.sc_ic_QuestionChoiceSecurityManager&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Security manager for the sc_ic_question_choice table&lt;/description&gt;
        &lt;name&gt;sc_ic_QuestionChoiceSecurityManager&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var sc_ic_QuestionChoiceSecurityManager = Class.create();

sc_ic_QuestionChoiceSecurityManager.prototype = Object.extendsObject(sc_ic_SecurityManager, {
	
	/** Returns false. Subclasses should define when creation should be allowed */
	canCreate: function() {
		var item = sc_ic_Factory.wrap(this._gr[sc_ic.QUESTION][sc_ic.ITEM_STAGING].getRefRecord());
		if (!item.accessibleInDomain())
			return false;
		return gs.hasRole(sc_.CATALOG_ADMIN) || gs.hasRole(sc_ic.CATALOG_MANAGER) || gs.hasRole(sc_ic.CATALOG_EDITOR);
	},
	
	/** Returns false. Subclasses should define when reading should be allowed */
	canRead: function() {
		if (gs.hasRole(sc_.CATALOG_ADMIN))
			return true;
		
		return sc_ic_Factory.getSecurityManager(this._gr[sc_ic.QUESTION][sc_ic.ITEM_STAGING].getRefRecord()).canRead();
	},
	
	/** Returns false. Subclasses should define when updating should be allowed */
	canUpdate: function() {
		return sc_ic_Factory.getSecurityManager(this._gr[sc_ic.QUESTION][sc_ic.ITEM_STAGING].getRefRecord()).canUpdate();
	},
	
	/** Returns false. Subclasses should define when deleting should be allowed */
	canDelete: function() {
		return sc_ic_Factory.getSecurityManager(this._gr[sc_ic.QUESTION][sc_ic.ITEM_STAGING].getRefRecord()).canUpdate();
	},
		
	type: "sc_ic_QuestionChoiceSecurityManager"
});
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;nigel.bell&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2014-03-04 08:04:10&lt;/sys_created_on&gt;
        &lt;sys_id&gt;32df41fceb1311003623666cd206feba&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;sc_ic_QuestionChoiceSecurityManager&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Catalog Platform" source="com.glideapp.servicecatalog.platform"&gt;6d218d0f6d2620100acb70b35343303c&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_32df41fceb1311003623666cd206feba&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-01-31 14:01:49&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;1306&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:26:47</sys_created_on>
        <sys_id>7d6c81ba2f331110d8a4d5f62799b6ca</sys_id>
        <sys_name>sc_ic_QuestionChoiceSecurityManager</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_7d6c81ba2f331110d8a4d5f62799b6ca</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
