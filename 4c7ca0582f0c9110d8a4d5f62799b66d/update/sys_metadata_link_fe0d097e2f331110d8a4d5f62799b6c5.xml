<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>8feee0005344101065f2ddeeff7b128c</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.SNHelpUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;SNHelpUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SNHelpUtil = Class.create();
SNHelpUtil.prototype = {
    initialize: function() {},

    setError: function(message, arg1, arg2) {
        var err = "{0} {1} {2}";
        gs.error(err, message || '', arg1 || '', arg2 || '');
    },

    constructPayLoad: function(mapper, records) {

        var result = [],
            cur_record, key, i, j;
        for (i = 0; i &lt; records.length; i++) {
            cur_record = {};
            for (j = 0; j &lt; mapper.length; j++) {
                key = mapper[j];
                if (records[i].hasOwnProperty(key)) {
                    cur_record[key] = records[i][key];
                }
            }
            result.push(cur_record);
        }
        return result;
    },
    // get new number for order field on step, question and answer table
    // new number is totalRows + 1
    getNextOrder: function(field, value, current) {
        var table = current.getRecordClassName();
        var gr = new GlideRecord(table);
        gr.addQuery(field, value);

        if (field === 'guidance')
            gr.addNullQuery("parent");

        gr.query();

        return gr.getRowCount() + 1;
    },
    // adjust order on delete for guidance step, questions and answers table
    adjustOrder: function(field, value, current) {
        // orphan record - Dont do anything 
        if (!current[field].getRefRecord().isValidRecord())
            return;

        var table = current.getRecordClassName();
        var gr = new GlideRecord(table);

        gr.addQuery(field, value);
        gr.addQuery("order", "&gt;=", current.order);
        gr.orderBy("order");
        gr.query();

        while (gr.next()) {
            // There exist another step with same order - don't do anything
            if (gr.order == current.order)
                return;
            // Adjust the order to accommodate deleted step order.
            else if (gr.order &gt; 0) {
                gr.order = gr.order - 1;
                gr.setWorkflow(false);
                gr.autoSysFields(false);
                gr.update();
            }
        }
    },

    getNumberOfQuestions: function(content) {
        var gr = new GlideRecord("help_question");
        gr.addQuery("content", content);
        gr.query();
        return gr.getRowCount();
    },
    isSnHelpEnabled: function() {
        if (gs.getProperty("com.glide.sn_help.enabled", "true") === "true")
            return true;
        return false;
    },
    snHelpDisabledError: function(response) {
        var helpConstants = new SNHelpConstantProvider();
        if (!response)
            return;
        response.setStatus(helpConstants.httpStatus.BAD_REQUEST);
        response.setBody({
            error: helpConstants.snHelpDisabled
        });
    },

    canEditHelp: function() {
        return (gs.getUser().hasRole("admin") || gs.getUser().hasRole("sn_help_admin"));
    },

	canEditHelp: function() {
		return (gs.getUser().hasRole("admin") || gs.getUser().hasRole("sn_help_admin"));
	},
	getCurrentVersion: function() {
		return gs.getProperty("com.glide.embedded_help.version", "all");
	},
    type: 'SNHelpUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-04-03 10:34:48&lt;/sys_created_on&gt;
        &lt;sys_id&gt;8feee0005344101065f2ddeeff7b128c&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;56&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SNHelpUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="ServiceNow Help and Guidance Backend" source="com.glide.sn_help"&gt;b9e3c10b6da620100acb70b353433052&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_8feee0005344101065f2ddeeff7b128c&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-09-30 03:56:34&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;3132&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:29:35</sys_created_on>
        <sys_id>fe0d097e2f331110d8a4d5f62799b6c5</sys_id>
        <sys_name>SNHelpUtil</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_fe0d097e2f331110d8a4d5f62799b6c5</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
