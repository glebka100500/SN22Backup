<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0f701e335352011031a5ddeeff7b127c</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.AutoResolutionFixScriptUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;AutoResolutionFixScriptUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AutoResolutionFixScriptUtil = Class.create();

AutoResolutionFixScriptUtil.addResponseChannelsWithActiveChatbot = function(configGr) {
	
	var responseChannel = gs.getProperty(AutoResolutionConstants.RESPONSE_CHANNEL_LIST, '');
	var responseChannelList = responseChannel.split(",");
	if (!responseChannelList.length)
		return;

	var responseChannelGa = new GlideAggregate(AutoResolutionConstants.RESPONSE_CHANNEL_TABLE_NAME);
	responseChannelGa.addAggregate('COUNT');
	responseChannelGa.addQuery(AutoResolutionConstants.RESPONSE_CHANNEL_FIELD_NAME, "IN", responseChannelList);
	responseChannelGa.addQuery(AutoResolutionConstants.CONFIGURATION_FIELD_NAME, configGr.getUniqueValue());
	responseChannelGa.query();
	
	if (!responseChannelGa.hasNext() || (responseChannelGa.next() &amp;&amp; parseInt(responseChannelGa.getAggregate('COUNT')) &gt; 0))
		return;

	// Create response channels and set chatbot to active if no response channels exist for this config
	AutoResolutionResponseChannelHelper.createResponseChannelForARConfig(configGr.getUniqueValue());
	
	var responseChannelGr = new GlideRecord(AutoResolutionConstants.RESPONSE_CHANNEL_TABLE_NAME);
	responseChannelGr.addQuery(AutoResolutionConstants.CONFIGURATION_FIELD_NAME, configGr.getUniqueValue());
	responseChannelGr.addQuery(AutoResolutionConstants.RESPONSE_CHANNEL_FIELD_NAME, 
		AutoResolutionNotificationHelper.RESPONSE_CHANNEL.VA);
	responseChannelGr.query();

	if (!responseChannelGr.next())
		return;
	
	var fieldNameValueArr = [];
	var fieldNameValueMap = {};
	fieldNameValueMap["active"] = true;
	fieldNameValueArr.push(fieldNameValueMap);

	shouldUpdate = AutoResolutionFixScriptUtil.updateFieldValue(fieldNameValueArr, responseChannelGr);

	if (shouldUpdate)
		responseChannelGr.update();
	
};

AutoResolutionFixScriptUtil.updateFieldValue = function(fieldNameValueArr, gr) {

	var shouldUpdate = false;
	var tableName = gr.getClassDisplayValue(gr.getTableName());

	for (var i=0; i&lt;fieldNameValueArr.length; i++) {
		var fieldNameValueMap = fieldNameValueArr[i];
		var fieldName = Object.keys(fieldNameValueMap)[0];
		var fieldValue = fieldNameValueMap[fieldName];

		if (gr.isValidField(fieldName)) {
			gr.setValue(fieldName, fieldValue);
			gs.info('Executing IAR Fix script: Successfully updated {0} field on {1}={2} to {3}',
				fieldName, tableName, gr.getUniqueValue(), fieldValue);
			shouldUpdate = true;
		}
	}
	return shouldUpdate;
};

AutoResolutionFixScriptUtil.prototype = {
    initialize: function() {
    },

    type: 'AutoResolutionFixScriptUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-03-24 18:13:02&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0f701e335352011031a5ddeeff7b127c&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AutoResolutionFixScriptUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Issue Auto-Resolution" source="com.glide.cs.auto_resolution"&gt;85493a472f800110d8a4d5f62799b6a9&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0f701e335352011031a5ddeeff7b127c&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-03-28 22:15:41&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2533&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:26:00</sys_created_on>
        <sys_id>163c817a2f331110d8a4d5f62799b6ed</sys_id>
        <sys_name>AutoResolutionFixScriptUtil</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_163c817a2f331110d8a4d5f62799b6ed</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
