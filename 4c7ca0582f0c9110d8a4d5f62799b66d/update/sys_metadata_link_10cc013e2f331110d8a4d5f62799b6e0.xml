<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>6c8a49af0f001010967863cda8767e9b</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.AssetQueueProcessor&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;AssetQueueProcessor&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AssetQueueProcessor = Class.create();
AssetQueueProcessor.prototype = Object.extendsObject(global.AssetManagementPerGlideRecordTimeoutBaseJob, {
	initialize: function(jobLog) {
		this.comments = {
			TOTAL_RECORDS: 0,
			ASSET_CREATED: 0,
			ASSET_SKIPPED: 0,
			CI_NEEDS_VERIFICATION: 0,
			CI_DELETED: 0,
			CI_ERROR: 0,
			NOT_SUPPORTED: 0,
		};
		this.CIClasses = [];
		this.nonSupportedClasses = ['cmdb_ci'];
		this.timeoutPeriod = this._getJobTimeoutPeriod();
		this.stopWatch = new GlideStopWatch();
		this.C_BATCH_SIZE = 200;
		this.recordCount = 0;
		this.assetCIAPI = new AssetandCI();
		this.jobLog = jobLog;
	},

	_getJobTimeoutPeriod: function() {
		// Time in minutes
		var C_DEFAULT_TIMEOUT = 13;
		var C_MINIMUM_TIMEOUT = 1;
		var C_MAXIMUM_TIMEOUT = 60;
		var timeout = C_DEFAULT_TIMEOUT;
		var propertyValue;
		var assetProperty = new GlideRecord(AssetandCI.ASSET_PROPERTY);
		if (assetProperty.get('key', AssetandCI.ASYNC_JOB_TIMEOUT_PROPERTY)) {
			propertyValue = Number(assetProperty.getValue('value'));
			if (propertyValue &gt;= C_MINIMUM_TIMEOUT &amp;&amp; propertyValue &lt;= C_MAXIMUM_TIMEOUT) {
				timeout = propertyValue;
			}
		}
		// Converting minutes to milliseconds
		return timeout * 60 * 1000;
	},

	_isCIRecord: function(table) {
		if (this.nonSupportedClasses.indexOf(table) &gt; -1) {
			return false;
		}
		if (!this.CIClasses.indexOf(table) &gt; -1) {
			var tableUtil = new TableUtils(table);
			var arrayUtils = new ArrayUtil();
			var tableArray = arrayUtils.convertArray(tableUtil.getTables());
			var tables = tableArray.toString().split(',');
			if (tables.indexOf('cmdb_ci') &gt; -1) {
				this.CIClasses.push(table);
			} else {
				this.nonSupportedClasses.push(table);
				return false;
			}
		}
		return true;
	},

	_processAssetQueueRecord: function(assetQueueGr) {
		var ciGr;
		var result;
		this.comments.TOTAL_RECORDS += 1;
		try {
			if (!this._isCIRecord(assetQueueGr.getValue(AssetandCI.ASSET_CREATION_QUEUE.TABLE_COLUMN))) {
				this.comments.NOT_SUPPORTED += 1;
			} else {
				ciGr = new GlideRecord(assetQueueGr.getValue(AssetandCI.ASSET_CREATION_QUEUE.TABLE_COLUMN));
				if (!ciGr.get(assetQueueGr.getValue(AssetandCI.ASSET_CREATION_QUEUE.DOCUMENT_ID_COLUMN))) {
					this.comments.CI_DELETED += 1;
				} else {
					result = this.assetCIAPI.createAssetByPass(ciGr, false);
					switch (result.status) {
					case AssetandCI.RESULT_STATUS.ASSET_CREATED:
					{
						this.comments.ASSET_CREATED += 1;
						// Avoid additonal sync action between CI and Asset
						ciGr.skip_sync = true;
						ciGr.update();
						break;
					}
					case AssetandCI.RESULT_STATUS.ASSET_SKIPPED:
					{
						this.comments.ASSET_SKIPPED += 1;
						break;
					}
					case AssetandCI.RESULT_STATUS.CI_NEEDS_VERIFICATION:
					{
						this.comments.CI_NEEDS_VERIFICATION += 1;
						// Avoid additonal sync action between CI and Asset
						ciGr.skip_sync = true;
						ciGr.update();
						break;
					}
					case AssetandCI.RESULT_STATUS.CI_ERROR:
					{
						throw new Error(result.comments);
					}
					default:
					{
						throw new Error('Inavlid result');
					}
					}
				}
			}
			assetQueueGr.deleteRecord();
		} catch (error) {
			this.comments.CI_ERROR += 1;
			assetQueueGr.setValue(AssetandCI.ASSET_CREATION_QUEUE.STATE_COLUMN, 'error');
			assetQueueGr.setValue(AssetandCI.ASSET_CREATION_QUEUE.COMMENTS_COLUMN, error.message);
			assetQueueGr.update();
		}
	},

	getRecords: function() {
		var assetQueueGr = new GlideRecord(AssetandCI.ASSET_CREATION_QUEUE.TABLE);
		assetQueueGr.addQuery(AssetandCI.ASSET_CREATION_QUEUE.STATE_COLUMN, 'ready');
		assetQueueGr.query();
		return assetQueueGr;
	},

	getDomains: function() {
		return this.getDomainsGeneric();
	},

	runJobForRecord: function(assetQueueGr) {
		this._processAssetQueueRecord(assetQueueGr);
		this.recordCount += 1;
		if (this.recordCount &gt;= this.C_BATCH_SIZE) {
			this.recordCount = 0;
			if (this.stopWatch.getTime() &gt; this.timeoutPeriod) {
				this.setTimeoutFlag(true);
			}
		}
	},

	generateComments: function() {
		var comments = this.comments;
		return Object.keys(comments).reduce(function(accumulator, key) {
			return (accumulator + key.toUpperCase() + ': ' + comments[key] + '\n');
		}, '');
	},

	type: 'AssetQueueProcessor',
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-04-14 09:41:25&lt;/sys_created_on&gt;
        &lt;sys_id&gt;6c8a49af0f001010967863cda8767e9b&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AssetQueueProcessor&lt;/sys_name&gt;
        &lt;sys_package display_value="Asset Management" source="com.snc.asset_management"&gt;0ea009c76d2620100acb70b353433049&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_6c8a49af0f001010967863cda8767e9b&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-04-22 17:51:08&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;4254&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:28:18</sys_created_on>
        <sys_id>10cc013e2f331110d8a4d5f62799b6e0</sys_id>
        <sys_name>AssetQueueProcessor</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_10cc013e2f331110d8a4d5f62799b6e0</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
