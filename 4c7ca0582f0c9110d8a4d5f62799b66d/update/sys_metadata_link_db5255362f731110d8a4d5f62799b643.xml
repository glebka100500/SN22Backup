<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>13e55e562f975110d8a4d5f62799b6d4</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description/&gt;
        &lt;name&gt;Insert Test Records&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[function userNames (limit) {
	var grUser = new GlideQuery('sys_user')
	.select()
	.toArray(100);
	var count = 0
	return {
		next:  function () {
			if (count &lt; limit)
				return grUser[count++].sys_id.toString();
	}
	}
	
}

function serialNumbers(limit) {
	return {
		next: function () {
			return GlideSecureRandomUtil.getSecureRandomIntBound(limit).toString();
		}
	}
}

function names(prefix) {
	count = 0;
	return {
		next: function() {
			return prefix + count++;
		}
	}
}

function bitNext () {
	
	return {
		next: function (){
			var bit = GlideSecureRandomUtil.getSecureRandomIntBound(2);
			return bit ? true : false;
		}
	}
}

function recordGenerator(tableName, fieldsGenFunc, limit){
	
	for (var i = 0; i &lt; limit; i++){
		var fields = {};
		for (var field in fieldsGenFunc){
			fields[field] = fieldsGenFunc[field].next();
		}
		var gr = new GlideQuery(tableName);
		gr.insert(fields);
	}
	
}
var limit = 100;
var fieldsGen = {u_managed_by: userNames(limit), u_name: names("Server ngix "), u_sccm_client: bitNext(), u_serial_number: serialNumbers(limit)};
recordGenerator('u_infosys_server_repository', fieldsGen, limit);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-11-23 16:23:56&lt;/sys_created_on&gt;
        &lt;sys_id&gt;13e55e562f975110d8a4d5f62799b6d4&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Insert Test Records&lt;/sys_name&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_13e55e562f975110d8a4d5f62799b6d4&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-11-23 16:30:02&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:52:49</sys_created_on>
        <sys_id>db5255362f731110d8a4d5f62799b643</sys_id>
        <sys_name>Insert Test Records</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_db5255362f731110d8a4d5f62799b643</sys_update_name>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
