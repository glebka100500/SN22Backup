<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>061ec418b71230109fa9b381de11a9fd</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description/&gt;
        &lt;name&gt;Migrate AIS Context  Names&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[var fTargetField = 'trigger';
var fTargetTable = 'ais_rule';

var fReplacements = {
    'domain=': 'domains_id=',
    'location=': 'location_id=',
    'roles=': 'roles_id='
};

var keys = Object.keys(fReplacements);


// Find rules using old condition values
var gr = new GlideRecord(fTargetTable);
var grOr = gr.addORQuery(fTargetField, "CONTAINS", keys[0]);
for (var i = 1; i &lt; keys.length; i++)
    grOr.addORQuery(fTargetField, "CONTAINS", keys[i]);
gr.query();

var profileIdsToPublish = [];
var profileNamesToPublish = [];

while (gr.next()) {
    // Find already published profiles to republish later
    var profileId = gr.getValue('profile');
    if (!profileIdsToPublish.includes(profileId)) {
        var profile = new GlideRecord('ais_search_profile');
        profile.get(profileId);
        if (profile.getValue('state') == "PUBLISHED")
            profileNamesToPublish.push(profile.getValue('name'));
    }

    // Replace old condition values to new
    var newCondition = gr.getValue(fTargetField);
    for (var i = 0; i &lt; keys.length; i++)
        newCondition = newCondition.replace(keys[i], fReplacements[keys[i]]);
    gr.setValue(fTargetField, newCondition);
    gr.update();
}

// Republish already published profiles
if (profileNamesToPublish.length &gt; 0) {
    var synchronizer = new sn_ais.Synchronizer();
    for (var i = 0; i &lt; profileNamesToPublish.length; i++)
        synchronizer.publishProfile(profileNamesToPublish[i])
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-08-26 15:33:49&lt;/sys_created_on&gt;
        &lt;sys_id&gt;061ec418b71230109fa9b381de11a9fd&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Migrate AIS Context  Names&lt;/sys_name&gt;
        &lt;sys_package display_value="AI Search" source="com.glide.ais"&gt;accdbc4b6d2220100acb70b353433053&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_061ec418b71230109fa9b381de11a9fd&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-08-26 16:08:26&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:51:50</sys_created_on>
        <sys_id>702251362f731110d8a4d5f62799b62c</sys_id>
        <sys_name>Migrate AIS Context  Names</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_702251362f731110d8a4d5f62799b62c</sys_update_name>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
