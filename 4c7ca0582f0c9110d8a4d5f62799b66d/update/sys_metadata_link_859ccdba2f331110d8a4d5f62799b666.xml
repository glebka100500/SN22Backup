<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>53e80894c3333300daa79624a1d3aeb3</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PopulateManualService&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;PopulateManualService&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PopulateManualService = Class.create();
PopulateManualService.prototype = {
    initialize: function() {
    },
	
	process: function(service_id, levels, isDynamic) {
		// Check for required role (PRB1259050)
		if (!gs.hasRole(('app_service_admin'))) {
			gs.log('Aborting conversion to application service. User does not have the required role');
			return JSON.stringify({
					error_source: 'ACL',
					error_msg: gs.getMessage('User does not have the required role')
				});
		}
		
		if (!this.isITService(service_id)) {
			//PRB1283253: verifying that reclassification was successful, stopping on failure.
			var error = this.convertToITService(service_id, levels, isDynamic);
			if (error)
				return JSON.stringify({
					error_source: 'convertToITService',
					error_msg: error
				});
		}
		
		var bsm = new SNC.BusinessServiceManager();
		var blackListRelations = gs.getProperty("sa.mapping.system.manual.rel_type.blacklist","");
		if (!bsm.populateDiscoveredService(service_id, levels, blackListRelations)) {
			gs.log('Failed to populate service. ' + bsm.error);
			gs.getSession().putClientData('server_error_message',bsm.error);
			return JSON.stringify({
					error_source: 'populateDiscoveredService',
					error_msg: bsm.error
				});
		} else {
			if (isDynamic == 'true') {
				var gr = new GlideRecord('cmdb_ci_service_calculated');
				gr.setWorkflow(false);
				gr.setUseEngines(false);
				if (gr.get(service_id)) {
					gr.setValue('populator_status', '1' /* Ready */);
					gr.update();
				}
			}
		}

		return null;
	},

	isITService: function(service_id) {
		var gr  = new GlideRecord('cmdb_ci_service_discovered');
		if (gr.get(service_id))
			return true;
		return false;
	},

	convertToITService: function(service_id, levels, isDynamic) {
		// Keep flag on the session. this will help us later in business rules on cmdb_ci_service_discovered
		gs.getSession().putProperty("convert_from", "cmdb_ci_service");

		// reclassify to cmdb_ci_service_discovered
		var gr = new GlideRecord('cmdb_ci_service');
		gr.get(service_id);

		var reclassifiedGr = null;
		var error;

		//PRB1283253: catching error state from reclassifier. Printing message to user.
		try {
			var targetClass = isDynamic == 'true' ? 'cmdb_ci_service_calculated' : 'cmdb_ci_service_discovered';
			var rci = SncReclassifyCI.createFromGlideRecord(gr, targetClass);
			rci.setReason("UI action Convert to Application Service");
			reclassifiedGr = rci.reclassify();

		} catch (e) {
			error = e.getMessage();
		}

		gs.getSession().clearProperty("convert_from");

		if (null === reclassifiedGr) {
			if (error) {
				error = gs.getMessage('Service CI re-classification failed: {0}', error);
			} else {
				error = gs.getMessage('Service CI re-classification failed!');
			}

			gs.addErrorMessage(error);
			return error;
		} else {
			if (isDynamic == 'true') {
				reclassifiedGr.setValue('service_populator', '11f01e3dc3f23300daa79624a1d3ae32' /* populator sys_id */);
				reclassifiedGr.setValue('type', '5' /* Dynamic */);
				reclassifiedGr.setValue('metadata', JSON.stringify({'levels' : levels}));
			}
			reclassifiedGr.setValue('service_classification', 'Application Service');
			reclassifiedGr.update();
		}
	},

    type: 'PopulateManualService'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-09-05 20:01:19&lt;/sys_created_on&gt;
        &lt;sys_id&gt;53e80894c3333300daa79624a1d3aeb3&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;5&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PopulateManualService&lt;/sys_name&gt;
        &lt;sys_package display_value="Application Service" source="com.snc.cmdb.it_service"&gt;72b4cdcf6da620100acb70b353433039&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_53e80894c3333300daa79624a1d3aeb3&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-04-01 08:21:41&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;3263&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:27:33</sys_created_on>
        <sys_id>859ccdba2f331110d8a4d5f62799b666</sys_id>
        <sys_name>PopulateManualService</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_859ccdba2f331110d8a4d5f62799b666</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
