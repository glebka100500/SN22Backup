<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>20c4b04a0a0a0b990001dbb2a70b468d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.DeliveryPlanConverter&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Utility to convert existing catalog request items into the new delivery plan code&amp;#13;
Will create dependency records for each&lt;/description&gt;
        &lt;name&gt;DeliveryPlanConverter&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[gs.include('PrototypeServer');
gs.include('DeliveryPlanTaskGenerator');
gs.include('ExternalDependencyGenerator');

var DeliveryPlanConverter = Class.create();

DeliveryPlanConverter.prototype = {
 
     initialize : function () {
        this.sourceTable = 'sc_req_item';
     },

     convert : function() {
        gs.getSession().setIRDisabled(true);
        this.setRequestItemParents();
        this.convertDefault();
        this.convertExternal();
        gs.getSession().setIRDisabled(false);
     },

     setRequestItemParents : function() {
        gs.print('Setting parent field on request items');
        GlideDBUtil.copyFromOldToNew('parent', 'sc_req_item', 'task', 'request');
        gs.print('Parent field set complete');
     },

     convertExternal : function() {
        if (this.sourceTable != 'sc_req_item')
           return;

        gs.print('Beginning conversion of external dependencies');
        var gr = new GlideRecord('sc_request');
        gr.query();
        var count = 0;
        var max = gr.getRowCount();
        var gen = new ExternalDependencyGenerator();
        gen.setLazy(true);
        while (gr.next()) {
           gen.setRequest(gr);
           gen.generate();
           count++;
           if (count % 100 == 0)
             gs.print('Converted ' + count + ' of ' + max + ' external dependencies');
        }  
        gs.print('Completed conversion of external dependencies');      
     },

     convertDefault : function() {
        gs.print('Beginning delivery plan conversion for ' + this.sourceTable);
        var gr = new GlideRecord(this.sourceTable);
        gr.query();
        var count = 0;
        var max = gr.getRowCount();
        while (gr.next()) {
           count++;
           var planID = GlideappDeliveryPlan.resolvePlanID(gr);
           if (!planID)
             continue;
        
           var plan = GlideappDeliveryPlan.get(planID);
           if (!plan)
             continue;
          
           var gen = new DeliveryPlanTaskGenerator(plan, gr);
           gen.setLazy(true);
           gen.convertTasks();
           if (count % 100 == 0)
              gs.print('Converted ' + count + ' of ' + max + ' delivery plans');

        }
        gs.print('Completed delivery plan conversion');
     }
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;glide.maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2007-11-08 19:38:06&lt;/sys_created_on&gt;
        &lt;sys_id&gt;20c4b04a0a0a0b990001dbb2a70b468d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;30&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;DeliveryPlanConverter&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Catalog Platform" source="com.glideapp.servicecatalog.platform"&gt;6d218d0f6d2620100acb70b35343303c&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_20c4b04a0a0a0b990001dbb2a70b468d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;glide.maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2007-11-22 00:19:49&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2357&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:26:23</sys_created_on>
        <sys_id>0c5cc97a2f331110d8a4d5f62799b66e</sys_id>
        <sys_name>DeliveryPlanConverter</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_0c5cc97a2f331110d8a4d5f62799b66e</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
