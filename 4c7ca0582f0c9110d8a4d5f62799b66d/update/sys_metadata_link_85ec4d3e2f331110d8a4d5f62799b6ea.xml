<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>8008350b9f002100c0f1fc12957fcf5b</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.AJAXProgressStatusChecker&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description&gt;Checks status of hierarchical progress workers using sys_execution_tracker table&lt;/description&gt;
        &lt;name&gt;AJAXProgressStatusChecker&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AJAXProgressStatusChecker = Class.create();


AJAXProgressStatusChecker.prototype = Object.extendsObject(AbstractAjaxProcessor, {

	getStatus: function(id) {
		var execution_id = this.getParameter("sysparm_execution_id") || id;
		var tgr = new GlideRecord("sys_execution_tracker");
		if (tgr.get(execution_id)) {
			var status = this.getStatusLayer(tgr, tgr.canRead());
			return new JSON().encode(status);
		} else {
			// Tracker not found
			var noTrackerObj = {};
			var RecordNotFoundMsg = GlideSysMessage.format("Record not found");
			noTrackerObj.name = RecordNotFoundMsg;
			noTrackerObj.message = RecordNotFoundMsg;
			// State value -1 will tell the client API to stop polling for progress, as record not found
			noTrackerObj.state = "-1";
			noTrackerObj.sys_id = execution_id;
			noTrackerObj.children = [];
			noTrackerObj.results = [];
			return new JSON().encode(noTrackerObj);
		}
	},

	getStatusLayer: function(gr, hasReadAccess) {
		var obj = {};
		if (hasReadAccess) {
			obj.name = gr.name.toString();
			obj.state = gr.state.toString();
			obj.message = gr.message.toString();
			obj.detail_message = gr.detail_message.toString();
			try {
				obj.result = new JSON().decode(gr.result.toString());
			} catch (e) {
				gs.print("Error occurred while parsing execution tracker result: " + e);
			}
			obj.sys_id = gr.sys_id.toString();
			obj.percent_complete = gr.percent_complete.toString();
			obj.updated_on = gr.sys_updated_on.toString();

			var startTime = new GlideDateTime(gr.start_time);
			var endTime = new GlideDateTime(gr.completion_time);
			var duration = new GlideDuration(endTime.getNumericValue() - startTime.getNumericValue());

			obj.duration = duration.getDisplayValue();
		} else {
			var AccessDeniedMsg = GlideSysMessage.format("Access denied");
			obj.name = AccessDeniedMsg;
			obj.message = AccessDeniedMsg;
			obj.state = "1";
			// State value 1 lets the client API know it may be "Running", instead of abruptly saying we are done and break client rendering
			// Running state help the client to continue poll, if somehow access opens up after a bit. Example: ATF impersonation use case
			obj.sys_id = gr.sys_id.toString();
		}

		obj.children = [];
		obj.results = [];
		var pgr = new GlideRecord("sys_execution_tracker");
		pgr.addQuery("parent", gr.sys_id);
		pgr.orderBy("order");
		pgr.query();
		while (pgr.next()) {
			obj.children.push(this.getStatusLayer(pgr, hasReadAccess));
		}
		return obj;
	},

	type: 'AJAXProgressStatusChecker'

});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2014-04-17 17:37:32&lt;/sys_created_on&gt;
        &lt;sys_id&gt;8008350b9f002100c0f1fc12957fcf5b&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;31&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AJAXProgressStatusChecker&lt;/sys_name&gt;
        &lt;sys_package display_value="Progress Tracker" source="com.glide.ui.progress"&gt;bfcc38836d2220100acb70b3534330d7&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_8008350b9f002100c0f1fc12957fcf5b&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-07-04 10:51:13&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2507&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:28:54</sys_created_on>
        <sys_id>85ec4d3e2f331110d8a4d5f62799b6ea</sys_id>
        <sys_name>AJAXProgressStatusChecker</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_85ec4d3e2f331110d8a4d5f62799b6ea</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
