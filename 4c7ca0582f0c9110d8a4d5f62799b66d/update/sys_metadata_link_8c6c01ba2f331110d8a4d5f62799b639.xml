<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2eebee2f771101107cb28babbe5a9927</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.Device_Trust_Internal&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;Device_Trust_Internal&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[gs.include("PrototypeServer");

var Device_Trust_Internal = Class.create();
Device_Trust_Internal.prototype = {
    debugMode: false,
    LOG_SOURCE: 'DeviceTrust_Script',
    LOGGER: GlideSysLog,

    initialize: function() {
        if (gs.getProperty("glide.authenticate.debug.allow.trusted.device") == "true") {
            this.debugMode = true;
        } else {
            this.debugMode = false;
        }
    },

    process: function(args) {
        try {
			if(!args || args.length == 0) {
				this.debug('Received null or empty arguments');
				return;
			}
			this.debug('Received arguments are=' + args);
			var token = args.get('token');
			var tokenFrom = args.get('token_from');
			var isRegistration = args.get('is_registration');
            var isValidToken = this.isValidToken(token, tokenFrom, isRegistration);
			if(!isValidToken)
				this.error('Token validation failed. Check the hash and timestamp fields.');
			return isValidToken;
        } catch(e) {
			this.error(e.message);
        }
    },

    isValidToken: function(token, tokenFrom, isRegistration) {
        this.debug("Received token, " + token + ", token_from=" + tokenFrom + ', is_registration=' + isRegistration);
        return SNC.DeviceRegistrationUtils.validateToken(token, tokenFrom, isRegistration);
    },

    printDebugValues: function() {
        if (this.debugMode) {
            var headerNames = request.getHeaderNames();
            while (headerNames.hasMoreElements()) {
                var aName = headerNames.nextElement();
                this.debug("HEADER: " + aName + " --&gt; " + request.getHeader(aName));
            }

            var parmMap = request.getParameterMap();
            this.printHashTable(parmMap);
        }
    },

    printHashTable: function(hashMap) {
        var iterator = hashMap.keySet().iterator(); // Iterate on keys
        this.debug("Printing POST Parms...");
        while (iterator.hasNext()) {
            var key = iterator.next();
            var value = hashMap.get(key);
            for (var i = 0; i &lt; value.length; i++) {
                this.debug("POST Parm '" + key + "': " + value[i]);
            }
        }
    },

    debug: function(msg) {
        if (this.debugMode) {
            this.LOGGER.info(this.LOG_SOURCE, "Device_Trust_Internal: " + msg);
        }
    },

    error: function(msg) {
        this.LOGGER.error(this.LOG_SOURCE, "Device_Trust_Internal: " + msg);
    },

    type: 'Device_Trust_Internal'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-02-02 08:41:37&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2eebee2f771101107cb28babbe5a9927&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;26&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Device_Trust_Internal&lt;/sys_name&gt;
        &lt;sys_package display_value="Adaptive Authentication" source="com.snc.adaptive_authentication"&gt;a0d3efda2f860110d8a4d5f62799b674&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2eebee2f771101107cb28babbe5a9927&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-02-03 16:58:01&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2477&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:26:39</sys_created_on>
        <sys_id>8c6c01ba2f331110d8a4d5f62799b639</sys_id>
        <sys_name>Device_Trust_Internal</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_8c6c01ba2f331110d8a4d5f62799b639</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
