<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>944b4c195332101034d1ddeeff7b12cb</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.STTRMStateChoiceUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Manage available state choices for transition models&lt;/description&gt;
        &lt;name&gt;STTRMStateChoiceUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var STTRMStateChoiceUtil = Class.create();
STTRMStateChoiceUtil.prototype = {
	initialize: function(model) {
		this._model = model;
	},
	
	getAvailableChoices: function(currState) {
		if (!this._model || !this._model.isValidRecord())
			return [];
		
		var sysChoiceGr = this._getSysChoices();
		
		var existingStateGr = new GlideRecord("sttrm_state");
		existingStateGr.addQuery("sttrm_model", this._model.getUniqueValue());
		existingStateGr.query();
		
		// Exclude the used states but keep the current state
		var excludeChoices = [];
		while (existingStateGr.next()) {
			if (currState &amp;&amp; currState.getUniqueValue() === existingStateGr.getUniqueValue())
				continue;
			
			excludeChoices.push(existingStateGr.getValue("state_value"));
		}
		
		var fieldChoices = [];
		while (sysChoiceGr.next()) {
			if (sysChoiceGr.getValue("inactive") === "1" || excludeChoices.indexOf(sysChoiceGr.getValue("value") + "") !== -1)
				continue;
			
			fieldChoices.push(this._choiceToJS(sysChoiceGr));
		}
		
		return fieldChoices;
	},
	
	// Returns the choice list info for the state provided
	getChoiceInfo: function(stateGr) {
		if (!stateGr || !stateGr.isValidRecord())
			return null;
		
		var sysChoiceGr = this._getSysChoices();
		var retVal = null;
		
		while (sysChoiceGr.next()) {
			if (sysChoiceGr.getValue("inactive") === "1")
				continue;
			
			if (sysChoiceGr.getValue("value") === stateGr.getValue("state_value")) {
				retVal = this._choiceToJS(sysChoiceGr);
				break;
			}
		}
		
		return retVal;
	},
	
	// Returns the choice list info for all states provided 
	getChoicesInfo: function(stateGr) {
		if (!stateGr || !stateGr.hasNext())
			return [];
		
		var stateValues = [];
		while (stateGr.next())
			stateValues.push(stateGr.getValue("state_value"));
		
		var retVal = [];
		var sysChoiceGr = this._getSysChoices();
		while(sysChoiceGr.next()) {
			if (sysChoiceGr.getValue("inactive") === "1")
				continue;
			
			if (stateValues.indexOf(sysChoiceGr.getValue("value")) !== -1)
				retVal.push(this._choiceToJS(sysChoiceGr));
		}
		return retVal;
	},
	
	_getSysChoices: function() {
		var choiceGr = new GlideSysChoice(
			this._model.getValue("table_name"),
			this._model.getValue("state_field")
		).getChoices();
		return choiceGr;
	},
		
	_choiceToJS: function(sysChoiceGr) {
		return {
			"value": sysChoiceGr.getValue("value"),
			"label": sysChoiceGr.getDisplayValue("label"),
			"sequence": sysChoiceGr.getValue("sequence")
		};
	},
	
	type: 'STTRMStateChoiceUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-08-21 22:06:45&lt;/sys_created_on&gt;
        &lt;sys_id&gt;944b4c195332101034d1ddeeff7b12cb&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;26&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;STTRMStateChoiceUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="State Transition Models" source="com.snc.itsm.state_transition_model"&gt;e2a381876da620100acb70b35343301b&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_944b4c195332101034d1ddeeff7b12cb&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-09-09 15:08:05&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2494&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:29:45</sys_created_on>
        <sys_id>5d1d0d7e2f331110d8a4d5f62799b6ce</sys_id>
        <sys_name>STTRMStateChoiceUtil</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_5d1d0d7e2f331110d8a4d5f62799b6ce</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
