<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>50788cc1f3c333009f6f301e73612b40</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.FxCurrencyConfigFieldChoiceListGenerator&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;FxCurrencyConfigFieldChoiceListGenerator&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var FxCurrencyConfigFieldChoiceListGenerator = Class.create();
FxCurrencyConfigFieldChoiceListGenerator.prototype = {
    initialize: function(numLevels) {
		this.numLevels = numLevels || 3;
    },

	process: function(targetTable) {
		var fields = this.generate(this.numLevels, targetTable);
		var choiceList = new GlideChoiceList();
		for (var i = 0; i &lt; fields.length; ++i)
			choiceList.add(fields[i].name, fields[i].label);

		return choiceList;
	},

	generate: function(numLevels, targetTable) {
		var fields = [];
		this._addFields(numLevels, fields, targetTable);

		fields.sort(function(first, second) {
			return String.localeCompare(first.label, second.label);
		});		
	
		return fields;
	},

	shouldAddField: function(ed) {
		return !ed.isReference();
	},

	shouldRecurse: function(ed) {
		return ed.isReference();
	},

	_addFields: function(level, fields, tableName, prefix) {
		var td = GlideTableDescriptor.get(tableName);
		if (!td.isValid())
			return;

		var eds = td.getSchemaList();
		for (var i = 0; i &lt; eds.size(); ++i) {
			var ed = eds.get(i);
			var name = (prefix) ? prefix + '.' + ed.getName() : ed.getName() + '';

			if (this.shouldAddField(ed)) {
				var label = ed.getLabel() + ' [' + name + ']';
				fields.push({"name" : name, "label" : label});
			}

			if (this.shouldRecurse(ed) &amp;&amp; level &gt; 0) {
				this._addFields(level - 1, fields, ed.getReference(), name);
			}
		}
	},
	
	type: 'FxCurrencyConfigFieldChoiceListGenerator'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-08-01 21:22:21&lt;/sys_created_on&gt;
        &lt;sys_id&gt;50788cc1f3c333009f6f301e73612b40&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;5&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;FxCurrencyConfigFieldChoiceListGenerator&lt;/sys_name&gt;
        &lt;sys_package display_value="FX Currency" source="com.glide.currency2"&gt;c40e380f6d2220100acb70b3534330ca&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_50788cc1f3c333009f6f301e73612b40&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-08-08 21:52:49&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;1462&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:27:28</sys_created_on>
        <sys_id>7b8c8dba2f331110d8a4d5f62799b652</sys_id>
        <sys_name>FxCurrencyConfigFieldChoiceListGenerator</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_7b8c8dba2f331110d8a4d5f62799b652</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
