<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>8f7c12e3c0a80027007eb8eb23c66455</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.CatalogTransactionOrder&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Invokes when the user hits "order now" from the cart.&amp;#13;
Adds the current item to the cart.&amp;#13;
Then checks the user out&lt;/description&gt;
        &lt;name&gt;CatalogTransactionOrder&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[gs.include("PrototypeServer");

var CatalogTransactionOrder = Class.create();

CatalogTransactionOrder.prototype = {

    initialize: function(request, response) {
        this.request = request;
        this.response = response;
    },

    execute: function() {
		try {
			var cart;
			var cartName = this.request.getParameter("sysparm_cart_name");
			if (!JSUtil.nil(cartName))
				cart = GlideappCart.get(cartName);
			else
				cart = GlideappCart.get();

			var wishListItemId = this.request.getParameter("sysparm_wish_list_item_id") || '';
			wishListItemId = '' + wishListItemId;

			var requestedFor = this.request.getParameter("sysparm_requested_for") || "";
			var itemID = this.request.getParameter("sysparm_id") + "";
			var parentID = this.request.getParameter("sysparm_parent_sys_id") || "";
			var parentTable = this.request.getParameter("sysparm_parent_table") || "";

			var catalogItem = GlideappCatalogItem.get(itemID);
			if (!catalogItem || !catalogItem.canView())
				return;

			var cartItemId = cart.addToCart(this.request);
			if (!cartItemId) {
				return GlideappCatalogURLGenerator.getItemBaseURLWithParams(itemID, {
					sysparm_parent_sys_id: parentID,
					sysparm_parent_table: parentTable
				});
			}

			if (!JSUtil.nil(cartName) &amp;&amp; !requestedFor) {
				//If requested_for is not sent in request default to either default cart or current logged in user, based on property
				//If property is true (default value), set requested for to that of default cart, else set it to the current logged in user
				var reqForOnCustomCart = GlideProperties.getBoolean("glide.sc.use_default_cart_requested_for", true) ? GlideappCart.get().getRequestedFor() : gs.getUserID();
				cart.setRequestedFor(reqForOnCustomCart);
			}

			if (cartItemId &amp;&amp; wishListItemId)
				this.removeWishListItem(cartItemId, wishListItemId);
			return new CatalogTransactionCheckout(this.request, this.response).execute();
		} catch(e) {
			var catalogExceptionUtils = new CatalogExceptionUtils();
			if(catalogExceptionUtils.isCartException(e)) {
				return catalogExceptionUtils.handleCartException(e);	
			}
			gs.debug(e);
		}
    },

    removeWishListItem: function(cartItemId, wishListItemId) {
        var savedItemCart = GlideappCart.get("saved_items");
        GlideSysAttachment.move('ZZ_YYsc_cart_item',wishListItemId ,'ZZ_YYsc_cart_item',cartItemId);
		if (!savedItemCart.copyAttachments(wishListItemId, cartItemId))
			return;

        savedItemCart.remove(wishListItemId);
    }
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;glide.maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2008-09-23 13:53:05&lt;/sys_created_on&gt;
        &lt;sys_id&gt;8f7c12e3c0a80027007eb8eb23c66455&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;18&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CatalogTransactionOrder&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Catalog Platform" source="com.glideapp.servicecatalog.platform"&gt;6d218d0f6d2620100acb70b35343303c&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_8f7c12e3c0a80027007eb8eb23c66455&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-02-18 04:59:50&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2497&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:29:33</sys_created_on>
        <sys_id>d20dc57e2f331110d8a4d5f62799b6f3</sys_id>
        <sys_name>CatalogTransactionOrder</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_d20dc57e2f331110d8a4d5f62799b6f3</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
