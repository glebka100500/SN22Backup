<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>8ad1ff0dc3df5c109e777d127840ddef</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ValidateFacets&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description&gt;Handles the Validation of Facet Records. This includes validating exisitng record to check they are in sync with the Search Profile, and validating the Facet Field when users configure a facet.&lt;/description&gt;
        &lt;name&gt;ValidateFacets&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var facet_inclusion_list = ["tags", "language"];
var ValidateFacets = Class.create();
ValidateFacets.prototype = Object.extendsObject(AbstractAjaxProcessor, {
    type: 'ValidateFacets',
	validate_existing_records: function () {
		if (!gs.hasRole('search_application_admin'))
			return 'The search_application_admin role is required to execute this script';
		
		var searchProfile = this.getParameter('sysparm_search_profile');
		var searchAppConfig = this.getParameter('sysparm_search_config');
		var invalidFacets = [];
		
		//Fetch Facets Records
		var facetGr = new GlideRecord('sys_search_facet');
		facetGr.addQuery('search_context_config', searchAppConfig);
		facetGr.query();
		
		//Check if the Facet is in Search Sources
		while(facetGr.next()) {
			if (facet_inclusion_list.indexOf(String(facetGr.ais_facet_name)) !== -1) continue;
			var tableName = (facetGr.ais_facet_name).split('.')[0];
			var searchSourceGr = new GlideRecord('ais_search_profile_ais_search_source_m2m');
			searchSourceGr.addQuery('profile.sys_id', searchProfile);
			searchSourceGr.addQuery('search_source.datasource.source', tableName);
			searchSourceGr.query();
			
			var isFacetValid = searchSourceGr.hasNext();
			
			if(!isFacetValid) invalidFacets.push(facetGr.getValue('name'));
			
		}
		//return list of invalid facets
		return JSON.stringify(invalidFacets);
		
	},
	validate_facet_field: function () {
		if (!gs.hasRole('search_application_admin'))
			return 'The search_application_admin role is required to execute this script';
		
			var searchProfile= this.getParameter('sysparm_search_profile');
			var facetField = String(this.getParameter('sysparm_facet_field'));
			var tableName = facetField.split('.')[0];
			var fieldName = facetField.split('.')[1];			
		
			//Bypass validations if exception
			if (facet_inclusion_list.indexOf(facetField) != -1) 
				return "valid";
		
			//Check if string format is correct
			if (!RegExp(/\w+\.\w+/).test(facetField))
				return "string_error";

			//Validate Table Name
			var gr = new GlideRecord('ais_search_profile_ais_search_source_m2m');
			gr.addQuery('profile.sys_id', searchProfile);
			gr.addQuery('search_source.datasource.source', tableName);
			gr.query();
			if (!gr.hasNext())
				return "table_error";
			
			//Validate Field Name
			var gr1 = new GlideRecord(tableName);
			if (!gr1.isValidField(fieldName))
				return "field_error";
		
			return "valid";
	},
	validate_cell_edit : function (){
		if (!gs.hasRole('search_application_admin'))
			return 'The search_application_admin role is required to execute this script';
		
		//Validates Facet Field onCellEdit due to no g_form access in list view
		var facet_id = this.getParameter('sysparm_facet_id');
		var facetField = String(this.getParameter('sysparm_facet_field'));
		var tableName = facetField.split('.')[0];
		var fieldName = facetField.split('.')[1];
		
		//Bypass validations if exception
		if (facet_inclusion_list.indexOf(facetField) != -1)
			return "valid";
		
		//Check if string format is correct
		if (!RegExp(/\w+\.\w+/).test(facetField)) {
			gs.addErrorMessage(gs.getMessage("Invalid Format. Please ensure the Facet Field is in the format: '[table name].[field name]' such as 'sys_user.name'"));
			return "invalid";
		}
		
		//Get Search Profile From Facet_Id
		var facet_gr = new GlideRecord('sys_search_facet');
		facet_gr.get(facet_id);
		var profile_id = facet_gr.search_context_config.search_profile;

		//Validate Table Name
		var gr = new GlideRecord('ais_search_profile_ais_search_source_m2m');
		gr.addQuery('profile.sys_id', profile_id);
		gr.addQuery('search_source.datasource.source', tableName);
		gr.query();
		if (!gr.hasNext()) {
			gs.addErrorMessage(gs.getMessage("Invalid Table Name: \"{0}\". Please ensure that the table is defined in the current search profile's search sources.", [tableName]));
			return "invalid";			
		}

		//Validate Field Name
		var gr1 = new GlideRecord(tableName);
		if (!gr1.isValidField(fieldName)) {
			gs.addErrorMessage(gs.getMessage("Invalid Field Name: \"{0}\". Please ensure that the field is defined in the supplied table: \"{1}\"", [fieldName, tableName]));
			return "invalid";
		}
		return "valid";
	}
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-09-15 16:48:32&lt;/sys_created_on&gt;
        &lt;sys_id&gt;8ad1ff0dc3df5c109e777d127840ddef&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ValidateFacets&lt;/sys_name&gt;
        &lt;sys_package display_value="Search Facets" source="com.glide.search.facets"&gt;25f2c58f6d6620100acb70b353433011&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_8ad1ff0dc3df5c109e777d127840ddef&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-09-29 14:26:41&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;4199&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:29:21</sys_created_on>
        <sys_id>affc857e2f331110d8a4d5f62799b6bf</sys_id>
        <sys_name>ValidateFacets</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_affc857e2f331110d8a4d5f62799b6bf</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
