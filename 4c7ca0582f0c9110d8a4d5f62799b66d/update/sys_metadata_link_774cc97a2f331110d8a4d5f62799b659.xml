<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>20aecff4c3f3d010766b0bd91f40ddbb</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.SplitStoryUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;SplitStoryUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SplitStoryUtil = Class.create();
SplitStoryUtil.prototype = { 
    initialize: function() {},
    generateNextStoryNumber: function(tableName) {
        var newNumber = new global.NumberManager(tableName);
        return newNumber.getNextObjNumberPadded();
    }, 
    processSaveStory: function(tableName, taskTableName, sprintFieldName, taskParentTable, fieldsObj) {
        var fieldsToCopy = {
            'rm_story': ['release', 'product', 'theme', 'epic', 'acceptance_criteria', 'assigned_to', 'description', 'assignment_group', 'project', 'project_phase'],
            'sn_safe_story': ['sn_safe_feature', 'sn_safe_epic', 'acceptance_criteria', 'assigned_to', 'description', 'enabler', 'assignment_group']
        };

        var originalStorySysId = fieldsObj.originalStorySysId;
        var originalStoryPoints = fieldsObj.originalStoryPoints;
        var splitStorySprintSysId = fieldsObj.splitStorySprintSysId;
        var splitStoryPoints = fieldsObj.splitStoryPoints;
        var splitStoryNumber = fieldsObj.splitStoryNumber;
        var splitStoryShortDescription = fieldsObj.splitStoryShortDescription;
        var checkbox = fieldsObj.checkbox;
        var originalStory = new GlideRecord(tableName);
        originalStory.get(originalStorySysId);
        originalStory.setValue('story_points', originalStoryPoints);
        originalStory.update();

        var newStory = new GlideRecord(tableName);
        newStory.initialize();
        newStory.setValue('number', splitStoryNumber);
        newStory.setValue('story_points', splitStoryPoints);
        newStory.setValue('short_description', splitStoryShortDescription);
        newStory.setValue(sprintFieldName, splitStorySprintSysId);
        newStory.setValue('split_from', originalStorySysId);

        var originalStoryValues = {};
        var fields = fieldsToCopy[tableName];
        for (var key in fields) {
            var fieldName = fields[key];
            if (originalStory.isValidField(fieldName))
                newStory.setValue(fieldName, originalStory.getValue(fieldName));
        }
        var result = newStory.insert();
        if (!gs.nil(result)) {
            var taskGr = new GlideRecord(taskTableName);
            var taskStateUtil = new global.PlannedTaskStateUtil(taskGr);
            var closedStates = taskStateUtil.getCloseStates();

            if (checkbox) {
                taskGr.addQuery(taskParentTable, originalStorySysId);
                taskGr.addQuery('state', 'NOT IN', closedStates);
                taskGr.query();
                taskGr.setValue(taskParentTable, newStory.sys_id);
                taskGr.updateMultiple();
            }
            var newStorySysId = newStory.sys_id;
            var attachment = new GlideSysAttachment();
            attachment.copy(tableName, originalStorySysId, tableName, newStorySysId);
        }

        return {
            "originalStory": originalStorySysId,
            "split_story_number": splitStoryNumber,
            "newStorySysId": newStorySysId,
            "status": result
        };
    },
    type: 'SplitStoryUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-10-09 16:13:50&lt;/sys_created_on&gt;
        &lt;sys_id&gt;20aecff4c3f3d010766b0bd91f40ddbb&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;28&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SplitStoryUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Agile Development 2.0 - Common" source="com.snc.sdlc.agile.2.0.common"&gt;60451b642fc10110d8a4d5f62799b679&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_20aecff4c3f3d010766b0bd91f40ddbb&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-10-13 06:27:23&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;3101&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:26:22</sys_created_on>
        <sys_id>774cc97a2f331110d8a4d5f62799b659</sys_id>
        <sys_name>SplitStoryUtil</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_774cc97a2f331110d8a4d5f62799b659</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
