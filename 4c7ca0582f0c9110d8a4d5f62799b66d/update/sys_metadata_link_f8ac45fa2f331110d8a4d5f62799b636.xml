<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>5cdeb4330fb60010bc7e40c1df767ed8</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PreviewRevertUpdateVersionAjax&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description&gt;Ajax helper class for helping the Revert UI action on Update Version entries for Upgrade Preview&lt;/description&gt;
        &lt;name&gt;PreviewRevertUpdateVersionAjax&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PreviewRevertUpdateVersionAjax = Class.create();

			PreviewRevertUpdateVersionAjax.prototype = Object.extendsObject(AbstractAjaxProcessor, {
				
				revertToBaseSystemPreview : function (sys_id) {
					// prevent transaction cancellation by quota rules
					var transaction = null;
					var isUncancelable = false;
					try {
						transaction = GlideTransaction.get();
						if (transaction != null) {
							isUncancelable = transaction.isUncancelable();
							transaction.setCannotCancel(true);
						}
						
						this._revert(sys_id);

					} finally {
						if (transaction != null)
							transaction.setCannotCancel(isUncancelable);
					}
				},

				retainCustomizationPreview : function (sys_id) {
					// prevent transaction cancellation by quota rules
					var transaction = null;
					var isUncancelable = false;
					try {
						transaction = GlideTransaction.get();
						if (transaction != null) {
							isUncancelable = transaction.isUncancelable();
							transaction.setCannotCancel(true);
						}

						this._retain(sys_id);

					} finally {
						if (transaction != null)
							transaction.setCannotCancel(isUncancelable);
					}
				},

				_revert: function(sys_id) {
					var previewLogRecord = this._getUpgradePreviewLogRecord(sys_id);
					var fileName = this._getFileName(previewLogRecord);
	
					// current version
					var grHead = GlideappUpdateVersion.getHeadVersion(fileName);
					
					// check permissions
					if (!GlideappUpdateVersion.canWriteRecordInVersion(grHead.sys_id)) {
						gs.addErrorMessage(gs.getMessage('Not allowed to revert this record'));
						return;
					}
						
					// baseline version
					var grBaselineHead = GlideappUpdateVersion.getVersion(fileName, null, "sys_upgrade_history", null);
					if (!grBaselineHead.isValidRecord()) {
						this._sendUINotification(previewLogRecord);						
						return;
					}
						
					// revert
					var glideappUpdateVersion = new GlideappUpdateVersion();
					var isSuccess = glideappUpdateVersion.revert(grBaselineHead.sys_id);
					glideappUpdateVersion.addUINotification();
					this._updatePreviewLogReverted(previewLogRecord, isSuccess);
				},

				_retain: function(sys_id) {
					var previewLogRecord = this._getUpgradePreviewLogRecord(sys_id);
					var fileName = this._getFileName(previewLogRecord);

					// current version
					var grHead = GlideappUpdateVersion.getHeadVersion(fileName);

					// check permissions
					if (!GlideappUpdateVersion.canWriteRecordInVersion(grHead.sys_id)) {
						gs.addErrorMessage(gs.getMessage('Not allowed to write to this record'));
						return;
					}

					// revert to customization if most recently reverted to baseline, otherwise keep customization
					var isSuccess;
					if (grHead.getValue('source_table') === 'sys_upgrade_history') {
						var glideappUpdateVersion = new GlideappUpdateVersion();
						var grVersion = new GlideRecordSecure('sys_update_version');
						grVersion.addQuery('name', fileName);
						grVersion.addQuery('source_table', '!=', 'sys_upgrade_history');
						grVersion.orderByDesc('sys_recorded_at');
						grVersion.query();

						if (grVersion.next())
							isSuccess = glideappUpdateVersion.revert(grVersion.sys_id);
						else
							isSuccess = false;
						glideappUpdateVersion.addUINotification();
					} else {
						isSuccess = true;
					}

					this._updatePreviewLogRetained(previewLogRecord, isSuccess);
				},
							
				_getUpgradePreviewLogRecord: function(sys_id) {
					var previewLogRecord = new GlideRecordSecure('upgrade_preview_log');
					previewLogRecord.get(sys_id);
					
					return previewLogRecord;
				},
				
				_getFileName: function(previewLogRecord) {
					var fileName = previewLogRecord.file_name;
					fileName = fileName.replace('.xml', '');
					
					return fileName;
				},
				
				_sendUINotification: function(previewLogRecord) {
					var gr = new GlideRecordSecure('upgrade_preview');
					gr.get(previewLogRecord.preview);
					var uin = new UINotification();
					uin.setText(gs.getMessage('Your update version entry cannot be reverted because no base system version was found for upgrade {0}', gr.getValue('target_version')));
					uin.send();
				},
				
				_updatePreviewLogReverted: function(previewLogRecord, isSuccess) {
					if (!isSuccess)
						return;
					
					previewLogRecord.disposition = '5';
					previewLogRecord.resolution = 'reverted';
					previewLogRecord.update();
				},

				_updatePreviewLogRetained: function(previewLogRecord, isSuccess) {
					if (!isSuccess)
						return;

					previewLogRecord.disposition = '4';
					previewLogRecord.resolution = 'retained';
					previewLogRecord.update();
				},

				toString: function () {
					return 'PreviewRevertUpdateVersionAjax';
				}
			});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-02-13 00:02:48&lt;/sys_created_on&gt;
        &lt;sys_id&gt;5cdeb4330fb60010bc7e40c1df767ed8&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;18&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PreviewRevertUpdateVersionAjax&lt;/sys_name&gt;
        &lt;sys_package display_value="Upgrade Center" source="com.glide.upgrade_center"&gt;1dbdb04b6d2220100acb70b35343302b&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_5cdeb4330fb60010bc7e40c1df767ed8&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-04-19 20:02:50&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;4771&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:27:48</sys_created_on>
        <sys_id>f8ac45fa2f331110d8a4d5f62799b636</sys_id>
        <sys_name>PreviewRevertUpdateVersionAjax</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_f8ac45fa2f331110d8a4d5f62799b636</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
