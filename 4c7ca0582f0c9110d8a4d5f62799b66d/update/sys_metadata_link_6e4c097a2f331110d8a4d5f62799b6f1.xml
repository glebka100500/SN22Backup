<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1c54764153533300f7c6ddeeff7b1282</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ResponseTemplateSearchHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;ResponseTemplateSearchHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ResponseTemplateSearchHelper = Class.create();
ResponseTemplateSearchHelper.prototype = {
    initialize: function(request, response) {
		this.request = request;
		this.response = response;
		
		this.DEFAULT_COUNT = 10;
		this.DEFAULT_OFFSET = 0;
    },

	processSearch: function() {
		var inputs = JSON.parse(arguments[0]);

		if (!inputs['tableName'])
			return;
		
		this.table = this.request.formTable;
		var responseTemplate = new sn_templated_snip.ResponseTemplate();
		this.responseTable = inputs['tableName'].toString();
		this.sysId = this.request.formId;
		this.search = this.request.query &amp;&amp; this.request.query.freetext ? this.request.query.freetext : '';
		this.count = Number(inputs['count'] ? inputs['count'].toString() : this.DEFAULT_COUNT) + 1;
		this.offset = Number(inputs['offset'] ? inputs['offset'].toString() : this.DEFAULT_OFFSET);
		
		var encodedQuery = inputs['script.encoded_query'];
		var channel = responseTemplate.CHANNEL_FORM;
		if (encodedQuery.includes('channels=')) {
			channel = encodedQuery.replace('channels=', '');
		}
		var opts = {
			channel: channel
		};

		var results = responseTemplate.query(this.table, this.sysId, this.search, this.count, this.offset, true, '', opts);

		this.formatResults(JSON.parse(results));
	},

	formatResults: function(results) {
		if (!results || !results.length)
			return;
		
		var sysIdResultsMap = {};
		
		for (var i = 0; i &lt; results.length; i++) {
			var result = results[i];
			sysIdResultsMap[result.sys_id] = result;
		}

		var gr = new GlideRecordSecure(this.responseTable);
		gr.addQuery('sys_id', 'IN', Object.keys(sysIdResultsMap));
		gr.orderBy('name');
		gr.query();

		while (gr.next()) {
			var response = sysIdResultsMap[gr.getUniqueValue()];

			// Swap template with evaluated response
			gr.setValue('html_script_body', response.evaluated_response.evaluated_body);

			var srdc = new SNC.SearchResultDisplayConfiguration(gr.getTableName(), this.request.getUiType(), this.request.getFormTable());
			var res = new SNC.SearchResult();
			res['title'] = response.name;
			res['snippet'] = response.evaluated_response.evaluated_body;
			res['id'] = this.responseTable + ':' + response.sys_id;
			res.meta.setDisplayConfiguration(srdc, gr);

			this.response.results.push(res);
		}
	},

    type: 'ResponseTemplateSearchHelper'
};
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-08-14 19:53:37&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1c54764153533300f7c6ddeeff7b1282&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;35&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ResponseTemplateSearchHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Contextual Search" source="com.snc.contextual_search"&gt;947281c76d6620100acb70b35343306d&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1c54764153533300f7c6ddeeff7b1282&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-05-05 18:18:30&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2324&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:26:17</sys_created_on>
        <sys_id>6e4c097a2f331110d8a4d5f62799b6f1</sys_id>
        <sys_name>ResponseTemplateSearchHelper</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_6e4c097a2f331110d8a4d5f62799b6f1</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
