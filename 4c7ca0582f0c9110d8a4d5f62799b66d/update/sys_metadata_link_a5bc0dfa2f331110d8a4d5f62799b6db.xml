<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>67a59d8737b32100dcd445cbbebe5d8a</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.StorageWWN&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Manipulates FC WWN (World Wide Names).&lt;/description&gt;
        &lt;name&gt;StorageWWN&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[/**
 * Manipulates FC WWN (World Wide Names).
 * @author roy.laurie
 * @since fuji
 */
var StorageWWN = function(wwn) {
	this.wwn = StorageWWN.parse(wwn);
};


(function() {
	var noWWN = '00:00:00:00:00:00:00:00',
		header = /\\\d.*$/,
		simple = /^[0-9a-f]{2}(?:\:[0-9a-f]{2}){7}(?:(?:\:[0-9a-f]{2}){8})?$/,
		prefixed = /^(?:0x|3)?(?:[0-9a-f]{16}){1,2}$/,
		splitter = /([0-9a-f]{2})/g;

StorageWWN.prototype.type = 'StorageWWN';

StorageWWN.parse = function(wwn) {
	var wwnParsed = noWWN;

	if (wwn)
		wwnParsed = (''+wwn).trim().toLowerCase() || wwnParsed;

	// remove header found from some SMI results
	// example: 2000002A6A7C8118\16846848\1
	wwnParsed = wwnParsed.replace(header, '');
	
	// handle various notations
	if (wwnParsed.match(simple) !== null) {
		// regex matches preferred format:
		//  20:00:00:2a:6a:7c:81:18
		// nothing to do here, default notation
	} else if (wwnParsed.match(prefixed) !== null) {
		// regex matches following formats:
		//   2000002a6a7c8118
		//   0x2000002a6a7c8118
		//   32000002a6a7c8118
		if (wwnParsed.charAt(1) == 'x' &amp;&amp; wwnParsed.charAt(0) == '0')     // remove hex prefix
			wwnParsed = wwnParsed.substring(2);
		else if (wwnParsed.charAt(0) == '3') // remove scsi_id's prefix of 3
			wwnParsed = wwnParsed.substring(1);
		
		// split into pairs
		wwnParsed = wwnParsed.match(splitter).join(':');
	}
	
	return wwnParsed;
};

StorageWWN.prototype.getWWN = function() {
	return this.wwn;
};

StorageWWN.prototype.valueOf = function() {
	return this.wwn;
}

/**
 * Determines whether this WWN is lexicographically less than the provided WWN.
 * 
 * @param StorageWWN|string rhWWN WWN to compare to. Will be converted to StorageWWN if string.
 * @return boolean TRUE if this WWN is less than the right-hand WWN, FALSE otherwise.
 */
StorageWWN.prototype.lessThan = function(rhWWN) {
	if (!(rhWWN instanceof StorageWWN))
		rhWWN = new StorageWWN(rhWWN);
	
	var lh = this.getWWN();
	var rh = rhWWN.getWWN();
	return ( lh &lt; rh );
};

/**
 * Determines whether this WWN is lexicographically greater than the provided WWN.
 * 
 * @param StorageWWN|string rhWWN WWN to compare to. Will be converted to StorageWWN if string.
 * @return boolean TRUE if this WWN is greater than the right-hand WWN, FALSE otherwise.
 */
StorageWWN.prototype.greaterThan = function(rhWWN) {
	if (!(rhWWN instanceof StorageWWN))
		rhWWN = new StorageWWN(rhWWN);
	
	var lh = this.getWWN();
	var rh = rhWWN.getWWN();
	return ( lh &gt; rh );
};

StorageWWN.prototype.toString = function() {
	return this.wwn;
};

})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;roy.laurie&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2014-10-21 01:26:01&lt;/sys_created_on&gt;
        &lt;sys_id&gt;67a59d8737b32100dcd445cbbebe5d8a&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;23&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;StorageWWN&lt;/sys_name&gt;
        &lt;sys_package display_value="Configuration Management (CMDB)" source="com.snc.cmdb"&gt;c60efc0f6d2220100acb70b3534330c0&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_67a59d8737b32100dcd445cbbebe5d8a&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;steve.francis@snc&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-05-17 22:26:18&lt;/sys_updated_on&gt;
        &lt;u_script_length&gt;2534&lt;/u_script_length&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-19 20:28:07</sys_created_on>
        <sys_id>a5bc0dfa2f331110d8a4d5f62799b6db</sys_id>
        <sys_name>StorageWWN</sys_name>
        <sys_package display_value="Integrations 2022" source="x_644088_integrati">4c7ca0582f0c9110d8a4d5f62799b66d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations 2022">4c7ca0582f0c9110d8a4d5f62799b66d</sys_scope>
        <sys_update_name>sys_metadata_link_a5bc0dfa2f331110d8a4d5f62799b6db</sys_update_name>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
